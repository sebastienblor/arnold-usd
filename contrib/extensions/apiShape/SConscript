# vim: filetype=python

import system, os
from utils.build_tools import find_files_recursive

# import build env
Import('ext_env')
local_env = ext_env.Clone()

# Automatically add all source and include files found in the source path
src_base_dir  = os.path.join(local_env['ROOT_DIR'], 'contrib', 'extensions', 'apiShape')
source_files  = find_files_recursive(src_base_dir, ['.c', '.cpp'])
include_files = find_files_recursive(src_base_dir, ['.h'])

EXT = local_env.SharedLibrary('apiShape', source_files, LIBPREFIX='')

if system.os() == 'windows':
   local_env['MSVSSCONSCRIPT'] = ext_env.File('SConscript')
   EXT_PRJ = local_env.MSVSProject(target = 'apiShape' + local_env['MSVS']['PROJECTSUFFIX'],
                                    srcs = source_files + include_files,
                                    incs = [],
                                    buildtarget = 'apiShape',
                                    cmdargs = ['-Q -s COMPILER=msvc MODE=debug TARGET_ARCH=x86',
                                               '-Q -s COMPILER=icc MODE=debug TARGET_ARCH=x86',
                                               '-Q -s COMPILER=msvc MODE=opt TARGET_ARCH=x86',
                                               '-Q -s COMPILER=icc MODE=opt TARGET_ARCH=x86'],
                                    variant = ['Debug_MSVC|Win32',
                                               'Debug_ICC|Win32',
                                               'Opt_MSVC|Win32',
                                               'Opt_ICC|Win32'],
                                    auto_build_solution = 0,
                                    nokeep = 1)
   local_env.AlwaysBuild(EXT_PRJ)
   
   Return('EXT EXT_PRJ')
else:
   Return('EXT')