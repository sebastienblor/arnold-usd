# vim: filetype=python

import system, os
from build_tools import find_files_recursive
Import('ext_env')
##############################################################
common_env = ext_env.Clone()

src_common_dir  = os.path.join(common_env['ROOT_DIR'], 'contrib', 'extensions', 'bifrost', 'common')

BUILD_BASE_DIR = common_env['BUILD_BASE_DIR']

if system.os() =='windows':
   common_env.Append(CPPPATH = ['.'])   
   common_env.Append(LIBS=Split('bifrostapi.lib'))
else:
   common_env.Append(CPPPATH = ['.'])
   common_env.Append(LIBS=Split('bifrostapi'))
   common_env.Append(CCFLAGS = Split('-fvisibility=hidden -std=c++0x')) # hide symbols by default

mayaRoot = common_env['MAYA_ROOT']
if system.os() == 'darwin':
    mayaRoot = mayaRoot.replace('Maya.app/Contents', '')
    mayaRoot = mayaRoot.replace('//', '/')

common_env.Append(CPPPATH = [os.path.join(mayaRoot, 'include')])
common_env.Append(CPPPATH = [os.path.join(mayaRoot, 'plug-ins', 'bifrost', 'include', 'modules', 'bifrostapi', 'api')])
common_env.Append(CPPPATH = [os.path.join(mayaRoot, 'plug-ins', 'bifrost', 'include', 'modules', 'bifrostcore', 'api')])
common_env.Append(CPPPATH = [os.path.join(mayaRoot, 'plug-ins', 'bifrost', 'include', 'modules', 'bifrostops', 'api')])
common_env.Append(CPPPATH = [os.path.join(mayaRoot, 'plug-ins', 'bifrost', 'include', 'modules', 'bifrosttypes', 'api')])
common_env.Append(CPPPATH = [os.path.join(mayaRoot, 'plug-ins', 'bifrost', 'include', 'modules', 'aminomath', 'api')])
common_env.Append(CPPPATH = [os.path.join(mayaRoot, 'plug-ins', 'bifrost', 'include', 'common')])
common_env.Append(LIBPATH = [os.path.join(mayaRoot, 'plug-ins', 'bifrost', 'lib')])

common_object_user_data = common_env.SharedObject(target = os.path.join(BUILD_BASE_DIR, 'bifrost', 'bifrostObjectUserData.o'), source = os.path.join(src_common_dir, 'bifrostObjectUserData.cpp'))
common_object_helpers = common_env.SharedObject(target = os.path.join(BUILD_BASE_DIR, 'bifrost', 'bifrostHelpers.o'), source = os.path.join(src_common_dir, 'bifrostHelpers.cpp'))

##############################################################
####  BIFROST TRANSLATOR
# import build env

local_env = ext_env.Clone()

# Automatically add all source and include files found in the source path
src_base_dir  = os.path.join(local_env['ROOT_DIR'], 'contrib', 'extensions', 'bifrost', 'plugin')

source_files  = [os.path.join('plugin', x) for x in find_files_recursive(src_base_dir, ['.c', '.cpp'])]
source_files.append(common_object_user_data)
source_files.append(common_object_helpers)

include_files = [os.path.join('plugin', x) for x in find_files_recursive(src_base_dir, ['.h'])]

mayaRoot = local_env['MAYA_ROOT']
if system.os() == 'darwin':
    mayaRoot = mayaRoot.replace('Maya.app/Contents', '')
    mayaRoot = mayaRoot.replace('//', '/')

local_env.Append(CPPPATH = [os.path.join(mayaRoot, 'include')])
local_env.Append(CPPPATH = [os.path.join(mayaRoot, 'plug-ins', 'bifrost', 'include', 'modules', 'bifrostapi', 'api')])
local_env.Append(CPPPATH = [os.path.join(mayaRoot, 'plug-ins', 'bifrost', 'include', 'modules', 'bifrostcore', 'api')])
local_env.Append(CPPPATH = [os.path.join(mayaRoot, 'plug-ins', 'bifrost', 'include', 'modules', 'bifrostops', 'api')])
local_env.Append(CPPPATH = [os.path.join(mayaRoot, 'plug-ins', 'bifrost', 'include', 'modules', 'bifrosttypes', 'api')])
local_env.Append(CPPPATH = [os.path.join(mayaRoot, 'plug-ins', 'bifrost', 'include', 'modules', 'aminomath', 'api')])
local_env.Append(CPPPATH = [os.path.join(mayaRoot, 'plug-ins', 'bifrost', 'include', 'common')])

if system.os() == 'darwin':
    local_env.Append(LIBPATH = [os.path.join(mayaRoot, 'plug-ins', 'bifrost', 'bin')])
else:
    local_env.Append(LIBPATH = [os.path.join(mayaRoot, 'plug-ins', 'bifrost', 'lib')])

if system.os() =='windows':
   local_env.Append(CPPPATH = ['.'])   
   local_env.Append(LIBS=Split('ai.lib'))
   local_env.Append(LIBS=Split('bifrostapi.lib'))
else:
   local_env.Append(CPPPATH = ['.'])
   local_env.Append(LIBS=Split('ai'))   
   local_env.Append(LIBS=Split('bifrostapi'))
   local_env.Append(CCFLAGS = Split('-fvisibility=hidden -std=c++0x')) # hide symbols by default

EXT = local_env.SharedLibrary('bifrostTranslator', source_files, LIBPREFIX='')

###########################################################3
#### BIFROST SHADERS  (currently none)
# import build env

Import('ext_env')
shader_env = ext_env.Clone()

# Automatically add all source and include files found in the source path
src_base_dir  = os.path.join(shader_env['ROOT_DIR'], 'contrib', 'extensions', 'bifrost', 'shaders')
source_files  = [os.path.join('shaders', x) for x in find_files_recursive(src_base_dir, ['.c', '.cpp'])]
include_files = [os.path.join('shaders', x) for x in find_files_recursive(src_base_dir, ['.h'])]

mayaRoot = shader_env['MAYA_ROOT']
if system.os() == 'darwin':
    mayaRoot = mayaRoot.replace('Maya.app/Contents', '')
    mayaRoot = mayaRoot.replace('//', '/')

shader_env.Append(CPPPATH = [os.path.join(mayaRoot, 'include')])
shader_env.Append(CPPPATH = [os.path.join(mayaRoot, 'plug-ins', 'bifrost', 'include')])
shader_env.Append(CPPPATH = [os.path.join(mayaRoot, 'plug-ins', 'bifrost', 'include')])
#shader_env.Append(LIBPATH = [os.path.join(mayaRoot, 'plug-ins', 'bifrost', 'lib')])

if system.os() =='windows':
   shader_env.Append(CPPPATH = ['.'])   
   shader_env.Append(LIBS=Split('ai.lib'))
else:
   shader_env.Append(CPPPATH = ['.'])
   shader_env.Append(LIBS=Split('ai'))
   shader_env.Append(CCFLAGS = Split('-fvisibility=hidden')) # hide symbols by default

EXT_SHADERS = shader_env.SharedLibrary('bifrost_shaders', source_files, LIBPREFIX='')
#Return ('EXT EXT_SHADERS')


##########################################################
## BIFROST  PROCEDURAL
# import build env
Import('env')
proc_env = env.Clone()

src_base_dir  = os.path.join(proc_env['ROOT_DIR'], 'contrib', 'extensions', 'bifrost','procedural')
src_common_dir  = os.path.join(local_env['ROOT_DIR'], 'contrib', 'extensions', 'bifrost', 'common')

include_files = [os.path.join('procedural', x) for x in find_files_recursive(src_base_dir, ['.h'])]
source_files  = [os.path.join('procedural', x) for x in find_files_recursive(src_base_dir, ['.c', '.cpp'])]

source_files.append(common_object_user_data)
source_files.append(common_object_helpers)


mayaRoot = proc_env['MAYA_ROOT']
if system.os() == 'darwin':
    mayaRoot = mayaRoot.replace('Maya.app/Contents', '')
    mayaRoot = mayaRoot.replace('//', '/')


proc_env.Append(CPPPATH = [os.path.join(mayaRoot, 'include')])
proc_env.Append(CPPPATH = [os.path.join(mayaRoot, 'include')])
proc_env.Append(CPPPATH = [os.path.join(mayaRoot, 'plug-ins', 'bifrost', 'include', 'modules', 'bifrostapi', 'api')])
proc_env.Append(CPPPATH = [os.path.join(mayaRoot, 'plug-ins', 'bifrost', 'include', 'modules', 'bifrostcore', 'api')])
proc_env.Append(CPPPATH = [os.path.join(mayaRoot, 'plug-ins', 'bifrost', 'include', 'modules', 'bifrostops', 'api')])
proc_env.Append(CPPPATH = [os.path.join(mayaRoot, 'plug-ins', 'bifrost', 'include', 'modules', 'bifrosttypes', 'api')])
proc_env.Append(CPPPATH = [os.path.join(mayaRoot, 'plug-ins', 'bifrost', 'include', 'modules', 'aminomath', 'api')])
proc_env.Append(CPPPATH = [os.path.join(mayaRoot, 'plug-ins', 'bifrost', 'include', 'common')])

if system.os() == 'darwin':
    proc_env.Append(LIBPATH = [os.path.join(mayaRoot, 'plug-ins', 'bifrost', 'bin')])
else:
    proc_env.Append(LIBPATH = [os.path.join(mayaRoot, 'plug-ins', 'bifrost', 'lib')])


if system.os() =='windows':
   proc_env.Append(CPPPATH = ['.'])   
   proc_env.Append(LIBS=Split('ai.lib'))
   proc_env.Append(LIBS=Split('bifrostapi.lib'))
else:
   proc_env.Append(CPPPATH = ['.'])
   proc_env.Append(LIBS=Split('ai'))
   proc_env.Append(LIBS=Split('bifrostapi'))
   proc_env.Append(CCFLAGS = Split('-fvisibility=hidden -std=c++0x')) # hide symbols by default

EXT_PROCS = proc_env.SharedLibrary('bifrost_procedural', source_files, LIBPREFIX='')
EXT_PROCS.target_type = 'procedural'

Return('EXT EXT_SHADERS EXT_PROCS')
