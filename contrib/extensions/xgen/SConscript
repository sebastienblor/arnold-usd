# vim: filetype=python

import system, os
from build_tools import find_files_recursive

# import build env
Import('ext_env')
local_env = ext_env.Clone()

# Automatically add all source and include files found in the source path
src_base_dir  = os.path.join(local_env['ROOT_DIR'], 'contrib', 'extensions', 'xgen', 'plugin')
source_files  = [os.path.join('plugin', x) for x in find_files_recursive(src_base_dir, ['.c', '.cpp'])]
include_files = [os.path.join('plugin', x) for x in find_files_recursive(src_base_dir, ['.h'])]

EXT = local_env.SharedLibrary('xgen', source_files, LIBPREFIX='')
 
# import build env
Import('env')
proc_env = env.Clone()

# Automatically add all source and include files found in the source path
src_base_dir  = os.path.join(proc_env['ROOT_DIR'], 'contrib', 'extensions', 'xgen', 'procedurals')
source_files  = [os.path.join('procedurals', x) for x in find_files_recursive(src_base_dir, ['.c', '.cpp'])]
include_files = [os.path.join('procedurals', x) for x in find_files_recursive(src_base_dir, ['.h'])]

proc_env.Append(CPPPATH = [os.path.join(env['MAYA_ROOT'], 'plug-ins', 'xgen', 'include')])
proc_env.Append(CPPPATH = [os.path.join(env['MAYA_ROOT'], 'plug-ins', 'xgen', 'include', 'xgen')])
proc_env.Append(LIBPATH = [os.path.join(env['MAYA_ROOT'], 'plug-ins', 'xgen', 'lib')])

if system.os() =='windows':
   proc_env.Append(CPPPATH = ['.'])   
   proc_env.Append(LIBS=Split('ai.lib'))
   proc_env.Append(LIBS=Split('libAdskSeExpr.lib'))
   proc_env.Append(LIBS=Split('libAdskXGen.lib'))
else:
   proc_env.Append(CPPPATH = ['.'])
   proc_env.Append(LIBS=Split('ai'))
   proc_env.Append(LIBS=Split('AdskSeExpr'))
   proc_env.Append(LIBS=Split('AdskXGen'))
   proc_env.Append(CCFLAGS = Split('-fvisibility=hidden')) # hide symbols by default


MTOA_PROCS = proc_env.SharedLibrary('xgen_procedural', source_files, LIBPREFIX='')

Return('EXT MTOA_PROCS')
