
#include "display_gl.h"

#include <ai.h>

#ifndef _WIN32
#include <dlfcn.h>
#endif

/* Print OpenGL error messages */

void GL_print_error(const char *operation)
{
   GLenum error = kglGetError();
   switch (error)
   {
      case GL_NO_ERROR:
         // everything fine!
         break;
      case GL_INVALID_ENUM:
         AiMsgWarning("[OpenGL] %s: invalid enum", operation);
         break;
      case GL_INVALID_VALUE:
         AiMsgWarning("[OpenGL] %s: invalid value", operation);
         break;
      case GL_INVALID_OPERATION:
         AiMsgWarning("[OpenGL] %s: invalid operation", operation);
         break;
      case GL_OUT_OF_MEMORY:
         AiMsgWarning("[OpenGL] %s: out of memory", operation);
         break;
      case GL_STACK_UNDERFLOW:
         AiMsgWarning("[OpenGL] %s: stack underflow", operation);
         break;
      case GL_STACK_OVERFLOW:
         AiMsgWarning("[OpenGL] %s: stack overflow", operation);
         break;
      default:
         AiMsgWarning("[OpenGL] %s: unrecognized error (%d)", operation, error);
   }
   return;
}

/* Dynamic loading of OpenGL symbols */

#if defined(_DARWIN) || defined(_WIN32)

int GL_dynamic_load_init()
{
   return 1;
}

#else

KGLACCUMPROC kglAccum;
KGLALPHAFUNCPROC kglAlphaFunc;
KGLARETEXTURESRESIDENTPROC kglAreTexturesResident;
KGLARRAYELEMENTPROC kglArrayElement;
KGLBEGINPROC kglBegin;
KGLBINDTEXTUREPROC kglBindTexture;
KGLBITMAPPROC kglBitmap;
KGLBLENDFUNCPROC kglBlendFunc;
KGLCALLLISTPROC kglCallList;
KGLCALLLISTSPROC kglCallLists;
KGLCLEARPROC kglClear;
KGLCLEARACCUMPROC kglClearAccum;
KGLCLEARCOLORPROC kglClearColor;
KGLCLEARDEPTHPROC kglClearDepth;
KGLCLEARINDEXPROC kglClearIndex;
KGLCLEARSTENCILPROC kglClearStencil;
KGLCLIPPLANEPROC kglClipPlane;
KGLCOLOR3BPROC kglColor3b;
KGLCOLOR3BVPROC kglColor3bv;
KGLCOLOR3DPROC kglColor3d;
KGLCOLOR3DVPROC kglColor3dv;
KGLCOLOR3FPROC kglColor3f;
KGLCOLOR3FVPROC kglColor3fv;
KGLCOLOR3IPROC kglColor3i;
KGLCOLOR3IVPROC kglColor3iv;
KGLCOLOR3SPROC kglColor3s;
KGLCOLOR3SVPROC kglColor3sv;
KGLCOLOR3UBPROC kglColor3ub;
KGLCOLOR3UBVPROC kglColor3ubv;
KGLCOLOR3UIPROC kglColor3ui;
KGLCOLOR3UIVPROC kglColor3uiv;
KGLCOLOR3USPROC kglColor3us;
KGLCOLOR3USVPROC kglColor3usv;
KGLCOLOR4BPROC kglColor4b;
KGLCOLOR4BVPROC kglColor4bv;
KGLCOLOR4DPROC kglColor4d;
KGLCOLOR4DVPROC kglColor4dv;
KGLCOLOR4FPROC kglColor4f;
KGLCOLOR4FVPROC kglColor4fv;
KGLCOLOR4IPROC kglColor4i;
KGLCOLOR4IVPROC kglColor4iv;
KGLCOLOR4SPROC kglColor4s;
KGLCOLOR4SVPROC kglColor4sv;
KGLCOLOR4UBPROC kglColor4ub;
KGLCOLOR4UBVPROC kglColor4ubv;
KGLCOLOR4UIPROC kglColor4ui;
KGLCOLOR4UIVPROC kglColor4uiv;
KGLCOLOR4USPROC kglColor4us;
KGLCOLOR4USVPROC kglColor4usv;
KGLCOLORMASKPROC kglColorMask;
KGLCOLORMATERIALPROC kglColorMaterial;
KGLCOLORPOINTERPROC kglColorPointer;
KGLCOPYPIXELSPROC kglCopyPixels;
KGLCOPYTEXIMAGE1DPROC kglCopyTexImage1D;
KGLCOPYTEXIMAGE2DPROC kglCopyTexImage2D;
KGLCOPYTEXSUBIMAGE1DPROC kglCopyTexSubImage1D;
KGLCOPYTEXSUBIMAGE2DPROC kglCopyTexSubImage2D;
KGLCULLFACEPROC kglCullFace;
KGLDELETELISTSPROC kglDeleteLists;
KGLDELETETEXTURESPROC kglDeleteTextures;
KGLDEPTHFUNCPROC kglDepthFunc;
KGLDEPTHMASKPROC kglDepthMask;
KGLDEPTHRANGEPROC kglDepthRange;
KGLDISABLEPROC kglDisable;
KGLDISABLECLIENTSTATEPROC kglDisableClientState;
KGLDRAWARRAYSPROC kglDrawArrays;
KGLDRAWBUFFERPROC kglDrawBuffer;
KGLDRAWELEMENTSPROC kglDrawElements;
KGLDRAWPIXELSPROC kglDrawPixels;
KGLEDGEFLAGPROC kglEdgeFlag;
KGLEDGEFLAGPOINTERPROC kglEdgeFlagPointer;
KGLEDGEFLAGVPROC kglEdgeFlagv;
KGLENABLEPROC kglEnable;
KGLENABLECLIENTSTATEPROC kglEnableClientState;
KGLENDPROC kglEnd;
KGLENDLISTPROC kglEndList;
KGLEVALCOORD1DPROC kglEvalCoord1d;
KGLEVALCOORD1DVPROC kglEvalCoord1dv;
KGLEVALCOORD1FPROC kglEvalCoord1f;
KGLEVALCOORD1FVPROC kglEvalCoord1fv;
KGLEVALCOORD2DPROC kglEvalCoord2d;
KGLEVALCOORD2DVPROC kglEvalCoord2dv;
KGLEVALCOORD2FPROC kglEvalCoord2f;
KGLEVALCOORD2FVPROC kglEvalCoord2fv;
KGLEVALMESH1PROC kglEvalMesh1;
KGLEVALMESH2PROC kglEvalMesh2;
KGLEVALPOINT1PROC kglEvalPoint1;
KGLEVALPOINT2PROC kglEvalPoint2;
KGLFEEDBACKBUFFERPROC kglFeedbackBuffer;
KGLFINISHPROC kglFinish;
KGLFLUSHPROC kglFlush;
KGLFOGFPROC kglFogf;
KGLFOGFVPROC kglFogfv;
KGLFOGIPROC kglFogi;
KGLFOGIVPROC kglFogiv;
KGLFRONTFACEPROC kglFrontFace;
KGLFRUSTUMPROC kglFrustum;
KGLGENLISTSPROC kglGenLists;
KGLGENTEXTURESPROC kglGenTextures;
KGLGETBOOLEANVPROC kglGetBooleanv;
KGLGETCLIPPLANEPROC kglGetClipPlane;
KGLGETDOUBLEVPROC kglGetDoublev;
KGLGETERRORPROC kglGetError;
KGLGETFLOATVPROC kglGetFloatv;
KGLGETINTEGERVPROC kglGetIntegerv;
KGLGETLIGHTFVPROC kglGetLightfv;
KGLGETLIGHTIVPROC kglGetLightiv;
KGLGETMAPDVPROC kglGetMapdv;
KGLGETMAPFVPROC kglGetMapfv;
KGLGETMAPIVPROC kglGetMapiv;
KGLGETMATERIALFVPROC kglGetMaterialfv;
KGLGETMATERIALIVPROC kglGetMaterialiv;
KGLGETPIXELMAPFVPROC kglGetPixelMapfv;
KGLGETPIXELMAPUIVPROC kglGetPixelMapuiv;
KGLGETPIXELMAPUSVPROC kglGetPixelMapusv;
KGLGETPOINTERVPROC kglGetPointerv;
KGLGETPOLYGONSTIPPLEPROC kglGetPolygonStipple;
KGLGETSTRINGPROC kglGetString;
KGLGETTEXENVFVPROC kglGetTexEnvfv;
KGLGETTEXENVIVPROC kglGetTexEnviv;
KGLGETTEXGENDVPROC kglGetTexGendv;
KGLGETTEXGENFVPROC kglGetTexGenfv;
KGLGETTEXGENIVPROC kglGetTexGeniv;
KGLGETTEXIMAGEPROC kglGetTexImage;
KGLGETTEXLEVELPARAMETERFVPROC kglGetTexLevelParameterfv;
KGLGETTEXLEVELPARAMETERIVPROC kglGetTexLevelParameteriv;
KGLGETTEXPARAMETERFVPROC kglGetTexParameterfv;
KGLGETTEXPARAMETERIVPROC kglGetTexParameteriv;
KGLHINTPROC kglHint;
KGLINDEXMASKPROC kglIndexMask;
KGLINDEXPOINTERPROC kglIndexPointer;
KGLINDEXDPROC kglIndexd;
KGLINDEXDVPROC kglIndexdv;
KGLINDEXFPROC kglIndexf;
KGLINDEXFVPROC kglIndexfv;
KGLINDEXIPROC kglIndexi;
KGLINDEXIVPROC kglIndexiv;
KGLINDEXSPROC kglIndexs;
KGLINDEXSVPROC kglIndexsv;
KGLINDEXUBPROC kglIndexub;
KGLINDEXUBVPROC kglIndexubv;
KGLINITNAMESPROC kglInitNames;
KGLINTERLEAVEDARRAYSPROC kglInterleavedArrays;
KGLISENABLEDPROC kglIsEnabled;
KGLISLISTPROC kglIsList;
KGLISTEXTUREPROC kglIsTexture;
KGLLIGHTMODELFPROC kglLightModelf;
KGLLIGHTMODELFVPROC kglLightModelfv;
KGLLIGHTMODELIPROC kglLightModeli;
KGLLIGHTMODELIVPROC kglLightModeliv;
KGLLIGHTFPROC kglLightf;
KGLLIGHTFVPROC kglLightfv;
KGLLIGHTIPROC kglLighti;
KGLLIGHTIVPROC kglLightiv;
KGLLINESTIPPLEPROC kglLineStipple;
KGLLINEWIDTHPROC kglLineWidth;
KGLLISTBASEPROC kglListBase;
KGLLOADIDENTITYPROC kglLoadIdentity;
KGLLOADMATRIXDPROC kglLoadMatrixd;
KGLLOADMATRIXFPROC kglLoadMatrixf;
KGLLOADNAMEPROC kglLoadName;
KGLLOGICOPPROC kglLogicOp;
KGLMAP1DPROC kglMap1d;
KGLMAP1FPROC kglMap1f;
KGLMAP2DPROC kglMap2d;
KGLMAP2FPROC kglMap2f;
KGLMAPGRID1DPROC kglMapGrid1d;
KGLMAPGRID1FPROC kglMapGrid1f;
KGLMAPGRID2DPROC kglMapGrid2d;
KGLMAPGRID2FPROC kglMapGrid2f;
KGLMATERIALFPROC kglMaterialf;
KGLMATERIALFVPROC kglMaterialfv;
KGLMATERIALIPROC kglMateriali;
KGLMATERIALIVPROC kglMaterialiv;
KGLMATRIXMODEPROC kglMatrixMode;
KGLMULTMATRIXDPROC kglMultMatrixd;
KGLMULTMATRIXFPROC kglMultMatrixf;
KGLNEWLISTPROC kglNewList;
KGLNORMAL3BPROC kglNormal3b;
KGLNORMAL3BVPROC kglNormal3bv;
KGLNORMAL3DPROC kglNormal3d;
KGLNORMAL3DVPROC kglNormal3dv;
KGLNORMAL3FPROC kglNormal3f;
KGLNORMAL3FVPROC kglNormal3fv;
KGLNORMAL3IPROC kglNormal3i;
KGLNORMAL3IVPROC kglNormal3iv;
KGLNORMAL3SPROC kglNormal3s;
KGLNORMAL3SVPROC kglNormal3sv;
KGLNORMALPOINTERPROC kglNormalPointer;
KGLORTHOPROC kglOrtho;
KGLPASSTHROUGHPROC kglPassThrough;
KGLPIXELMAPFVPROC kglPixelMapfv;
KGLPIXELMAPUIVPROC kglPixelMapuiv;
KGLPIXELMAPUSVPROC kglPixelMapusv;
KGLPIXELSTOREFPROC kglPixelStoref;
KGLPIXELSTOREIPROC kglPixelStorei;
KGLPIXELTRANSFERFPROC kglPixelTransferf;
KGLPIXELTRANSFERIPROC kglPixelTransferi;
KGLPIXELZOOMPROC kglPixelZoom;
KGLPOINTSIZEPROC kglPointSize;
KGLPOLYGONMODEPROC kglPolygonMode;
KGLPOLYGONOFFSETPROC kglPolygonOffset;
KGLPOLYGONSTIPPLEPROC kglPolygonStipple;
KGLPOPATTRIBPROC kglPopAttrib;
KGLPOPCLIENTATTRIBPROC kglPopClientAttrib;
KGLPOPMATRIXPROC kglPopMatrix;
KGLPOPNAMEPROC kglPopName;
KGLPRIORITIZETEXTURESPROC kglPrioritizeTextures;
KGLPUSHATTRIBPROC kglPushAttrib;
KGLPUSHCLIENTATTRIBPROC kglPushClientAttrib;
KGLPUSHMATRIXPROC kglPushMatrix;
KGLPUSHNAMEPROC kglPushName;
KGLRASTERPOS2DPROC kglRasterPos2d;
KGLRASTERPOS2DVPROC kglRasterPos2dv;
KGLRASTERPOS2FPROC kglRasterPos2f;
KGLRASTERPOS2FVPROC kglRasterPos2fv;
KGLRASTERPOS2IPROC kglRasterPos2i;
KGLRASTERPOS2IVPROC kglRasterPos2iv;
KGLRASTERPOS2SPROC kglRasterPos2s;
KGLRASTERPOS2SVPROC kglRasterPos2sv;
KGLRASTERPOS3DPROC kglRasterPos3d;
KGLRASTERPOS3DVPROC kglRasterPos3dv;
KGLRASTERPOS3FPROC kglRasterPos3f;
KGLRASTERPOS3FVPROC kglRasterPos3fv;
KGLRASTERPOS3IPROC kglRasterPos3i;
KGLRASTERPOS3IVPROC kglRasterPos3iv;
KGLRASTERPOS3SPROC kglRasterPos3s;
KGLRASTERPOS3SVPROC kglRasterPos3sv;
KGLRASTERPOS4DPROC kglRasterPos4d;
KGLRASTERPOS4DVPROC kglRasterPos4dv;
KGLRASTERPOS4FPROC kglRasterPos4f;
KGLRASTERPOS4FVPROC kglRasterPos4fv;
KGLRASTERPOS4IPROC kglRasterPos4i;
KGLRASTERPOS4IVPROC kglRasterPos4iv;
KGLRASTERPOS4SPROC kglRasterPos4s;
KGLRASTERPOS4SVPROC kglRasterPos4sv;
KGLREADBUFFERPROC kglReadBuffer;
KGLREADPIXELSPROC kglReadPixels;
KGLRECTDPROC kglRectd;
KGLRECTDVPROC kglRectdv;
KGLRECTFPROC kglRectf;
KGLRECTFVPROC kglRectfv;
KGLRECTIPROC kglRecti;
KGLRECTIVPROC kglRectiv;
KGLRECTSPROC kglRects;
KGLRECTSVPROC kglRectsv;
KGLRENDERMODEPROC kglRenderMode;
KGLROTATEDPROC kglRotated;
KGLROTATEFPROC kglRotatef;
KGLSCALEDPROC kglScaled;
KGLSCALEFPROC kglScalef;
KGLSCISSORPROC kglScissor;
KGLSELECTBUFFERPROC kglSelectBuffer;
KGLSHADEMODELPROC kglShadeModel;
KGLSTENCILFUNCPROC kglStencilFunc;
KGLSTENCILMASKPROC kglStencilMask;
KGLSTENCILOPPROC kglStencilOp;
KGLTEXCOORD1DPROC kglTexCoord1d;
KGLTEXCOORD1DVPROC kglTexCoord1dv;
KGLTEXCOORD1FPROC kglTexCoord1f;
KGLTEXCOORD1FVPROC kglTexCoord1fv;
KGLTEXCOORD1IPROC kglTexCoord1i;
KGLTEXCOORD1IVPROC kglTexCoord1iv;
KGLTEXCOORD1SPROC kglTexCoord1s;
KGLTEXCOORD1SVPROC kglTexCoord1sv;
KGLTEXCOORD2DPROC kglTexCoord2d;
KGLTEXCOORD2DVPROC kglTexCoord2dv;
KGLTEXCOORD2FPROC kglTexCoord2f;
KGLTEXCOORD2FVPROC kglTexCoord2fv;
KGLTEXCOORD2IPROC kglTexCoord2i;
KGLTEXCOORD2IVPROC kglTexCoord2iv;
KGLTEXCOORD2SPROC kglTexCoord2s;
KGLTEXCOORD2SVPROC kglTexCoord2sv;
KGLTEXCOORD3DPROC kglTexCoord3d;
KGLTEXCOORD3DVPROC kglTexCoord3dv;
KGLTEXCOORD3FPROC kglTexCoord3f;
KGLTEXCOORD3FVPROC kglTexCoord3fv;
KGLTEXCOORD3IPROC kglTexCoord3i;
KGLTEXCOORD3IVPROC kglTexCoord3iv;
KGLTEXCOORD3SPROC kglTexCoord3s;
KGLTEXCOORD3SVPROC kglTexCoord3sv;
KGLTEXCOORD4DPROC kglTexCoord4d;
KGLTEXCOORD4DVPROC kglTexCoord4dv;
KGLTEXCOORD4FPROC kglTexCoord4f;
KGLTEXCOORD4FVPROC kglTexCoord4fv;
KGLTEXCOORD4IPROC kglTexCoord4i;
KGLTEXCOORD4IVPROC kglTexCoord4iv;
KGLTEXCOORD4SPROC kglTexCoord4s;
KGLTEXCOORD4SVPROC kglTexCoord4sv;
KGLTEXCOORDPOINTERPROC kglTexCoordPointer;
KGLTEXENVFPROC kglTexEnvf;
KGLTEXENVFVPROC kglTexEnvfv;
KGLTEXENVIPROC kglTexEnvi;
KGLTEXENVIVPROC kglTexEnviv;
KGLTEXGENDPROC kglTexGend;
KGLTEXGENDVPROC kglTexGendv;
KGLTEXGENFPROC kglTexGenf;
KGLTEXGENFVPROC kglTexGenfv;
KGLTEXGENIPROC kglTexGeni;
KGLTEXGENIVPROC kglTexGeniv;
KGLTEXIMAGE1DPROC kglTexImage1D;
KGLTEXIMAGE2DPROC kglTexImage2D;
KGLTEXPARAMETERFPROC kglTexParameterf;
KGLTEXPARAMETERFVPROC kglTexParameterfv;
KGLTEXPARAMETERIPROC kglTexParameteri;
KGLTEXPARAMETERIVPROC kglTexParameteriv;
KGLTEXSUBIMAGE1DPROC kglTexSubImage1D;
KGLTEXSUBIMAGE2DPROC kglTexSubImage2D;
KGLTRANSLATEDPROC kglTranslated;
KGLTRANSLATEFPROC kglTranslatef;
KGLVERTEX2DPROC kglVertex2d;
KGLVERTEX2DVPROC kglVertex2dv;
KGLVERTEX2FPROC kglVertex2f;
KGLVERTEX2FVPROC kglVertex2fv;
KGLVERTEX2IPROC kglVertex2i;
KGLVERTEX2IVPROC kglVertex2iv;
KGLVERTEX2SPROC kglVertex2s;
KGLVERTEX2SVPROC kglVertex2sv;
KGLVERTEX3DPROC kglVertex3d;
KGLVERTEX3DVPROC kglVertex3dv;
KGLVERTEX3FPROC kglVertex3f;
KGLVERTEX3FVPROC kglVertex3fv;
KGLVERTEX3IPROC kglVertex3i;
KGLVERTEX3IVPROC kglVertex3iv;
KGLVERTEX3SPROC kglVertex3s;
KGLVERTEX3SVPROC kglVertex3sv;
KGLVERTEX4DPROC kglVertex4d;
KGLVERTEX4DVPROC kglVertex4dv;
KGLVERTEX4FPROC kglVertex4f;
KGLVERTEX4FVPROC kglVertex4fv;
KGLVERTEX4IPROC kglVertex4i;
KGLVERTEX4IVPROC kglVertex4iv;
KGLVERTEX4SPROC kglVertex4s;
KGLVERTEX4SVPROC kglVertex4sv;
KGLVERTEXPOINTERPROC kglVertexPointer;
KGLVIEWPORTPROC kglViewport;

KGLXQUERYEXTENSION kglXQueryExtension;
KGLXQUERYVERSION kglXQueryVersion;
KGLXGETCONFIG kglXGetConfig;
KGLXCHOOSEVISUAL kglXChooseVisual;
KGLXCREATECONTEXT kglXCreateContext;
KGLXDESTROYCONTEXT kglXDestroyContext;
KGLXMAKECURRENT kglXMakeCurrent;
KGLXSWAPBUFFERS kglXSwapBuffers;
KGLXGETPROCADDRESSARB kglXGetProcAddressARB;

int GL_dynamic_load_init()
{
   const char *libname = "libGL.so.1";
   void *library = dlopen(libname, RTLD_LAZY|RTLD_GLOBAL);

   if (!library)
      return 0;

   kglAccum = (KGLACCUMPROC)dlsym(library, "glAccum");
   kglAlphaFunc = (KGLALPHAFUNCPROC)dlsym(library, "glAlphaFunc");
   kglAreTexturesResident = (KGLARETEXTURESRESIDENTPROC)dlsym(library, "glAreTexturesResident");
   kglArrayElement = (KGLARRAYELEMENTPROC)dlsym(library, "glArrayElement");
   kglBegin = (KGLBEGINPROC)dlsym(library, "glBegin");
   kglBindTexture = (KGLBINDTEXTUREPROC)dlsym(library, "glBindTexture");
   kglBitmap = (KGLBITMAPPROC)dlsym(library, "glBitmap");
   kglBlendFunc = (KGLBLENDFUNCPROC)dlsym(library, "glBlendFunc");
   kglCallList = (KGLCALLLISTPROC)dlsym(library, "glCallList");
   kglCallLists = (KGLCALLLISTSPROC)dlsym(library, "glCallLists");
   kglClear = (KGLCLEARPROC)dlsym(library, "glClear");
   kglClearAccum = (KGLCLEARACCUMPROC)dlsym(library, "glClearAccum");
   kglClearColor = (KGLCLEARCOLORPROC)dlsym(library, "glClearColor");
   kglClearDepth = (KGLCLEARDEPTHPROC)dlsym(library, "glClearDepth");
   kglClearIndex = (KGLCLEARINDEXPROC)dlsym(library, "glClearIndex");
   kglClearStencil = (KGLCLEARSTENCILPROC)dlsym(library, "glClearStencil");
   kglClipPlane = (KGLCLIPPLANEPROC)dlsym(library, "glClipPlane");
   kglColor3b = (KGLCOLOR3BPROC)dlsym(library, "glColor3b");
   kglColor3bv = (KGLCOLOR3BVPROC)dlsym(library, "glColor3bv");
   kglColor3d = (KGLCOLOR3DPROC)dlsym(library, "glColor3d");
   kglColor3dv = (KGLCOLOR3DVPROC)dlsym(library, "glColor3dv");
   kglColor3f = (KGLCOLOR3FPROC)dlsym(library, "glColor3f");
   kglColor3fv = (KGLCOLOR3FVPROC)dlsym(library, "glColor3fv");
   kglColor3i = (KGLCOLOR3IPROC)dlsym(library, "glColor3i");
   kglColor3iv = (KGLCOLOR3IVPROC)dlsym(library, "glColor3iv");
   kglColor3s = (KGLCOLOR3SPROC)dlsym(library, "glColor3s");
   kglColor3sv = (KGLCOLOR3SVPROC)dlsym(library, "glColor3sv");
   kglColor3ub = (KGLCOLOR3UBPROC)dlsym(library, "glColor3ub");
   kglColor3ubv = (KGLCOLOR3UBVPROC)dlsym(library, "glColor3ubv");
   kglColor3ui = (KGLCOLOR3UIPROC)dlsym(library, "glColor3ui");
   kglColor3uiv = (KGLCOLOR3UIVPROC)dlsym(library, "glColor3uiv");
   kglColor3us = (KGLCOLOR3USPROC)dlsym(library, "glColor3us");
   kglColor3usv = (KGLCOLOR3USVPROC)dlsym(library, "glColor3usv");
   kglColor4b = (KGLCOLOR4BPROC)dlsym(library, "glColor4b");
   kglColor4bv = (KGLCOLOR4BVPROC)dlsym(library, "glColor4bv");
   kglColor4d = (KGLCOLOR4DPROC)dlsym(library, "glColor4d");
   kglColor4dv = (KGLCOLOR4DVPROC)dlsym(library, "glColor4dv");
   kglColor4f = (KGLCOLOR4FPROC)dlsym(library, "glColor4f");
   kglColor4fv = (KGLCOLOR4FVPROC)dlsym(library, "glColor4fv");
   kglColor4i = (KGLCOLOR4IPROC)dlsym(library, "glColor4i");
   kglColor4iv = (KGLCOLOR4IVPROC)dlsym(library, "glColor4iv");
   kglColor4s = (KGLCOLOR4SPROC)dlsym(library, "glColor4s");
   kglColor4sv = (KGLCOLOR4SVPROC)dlsym(library, "glColor4sv");
   kglColor4ub = (KGLCOLOR4UBPROC)dlsym(library, "glColor4ub");
   kglColor4ubv = (KGLCOLOR4UBVPROC)dlsym(library, "glColor4ubv");
   kglColor4ui = (KGLCOLOR4UIPROC)dlsym(library, "glColor4ui");
   kglColor4uiv = (KGLCOLOR4UIVPROC)dlsym(library, "glColor4uiv");
   kglColor4us = (KGLCOLOR4USPROC)dlsym(library, "glColor4us");
   kglColor4usv = (KGLCOLOR4USVPROC)dlsym(library, "glColor4usv");
   kglColorMask = (KGLCOLORMASKPROC)dlsym(library, "glColorMask");
   kglColorMaterial = (KGLCOLORMATERIALPROC)dlsym(library, "glColorMaterial");
   kglColorPointer = (KGLCOLORPOINTERPROC)dlsym(library, "glColorPointer");
   kglCopyPixels = (KGLCOPYPIXELSPROC)dlsym(library, "glCopyPixels");
   kglCopyTexImage1D = (KGLCOPYTEXIMAGE1DPROC)dlsym(library, "glCopyTexImage1D");
   kglCopyTexImage2D = (KGLCOPYTEXIMAGE2DPROC)dlsym(library, "glCopyTexImage2D");
   kglCopyTexSubImage1D = (KGLCOPYTEXSUBIMAGE1DPROC)dlsym(library, "glCopyTexSubImage1D");
   kglCopyTexSubImage2D = (KGLCOPYTEXSUBIMAGE2DPROC)dlsym(library, "glCopyTexSubImage2D");
   kglCullFace = (KGLCULLFACEPROC)dlsym(library, "glCullFace");
   kglDeleteLists = (KGLDELETELISTSPROC)dlsym(library, "glDeleteLists");
   kglDeleteTextures = (KGLDELETETEXTURESPROC)dlsym(library, "glDeleteTextures");
   kglDepthFunc = (KGLDEPTHFUNCPROC)dlsym(library, "glDepthFunc");
   kglDepthMask = (KGLDEPTHMASKPROC)dlsym(library, "glDepthMask");
   kglDepthRange = (KGLDEPTHRANGEPROC)dlsym(library, "glDepthRange");
   kglDisable = (KGLDISABLEPROC)dlsym(library, "glDisable");
   kglDisableClientState = (KGLDISABLECLIENTSTATEPROC)dlsym(library, "glDisableClientState");
   kglDrawArrays = (KGLDRAWARRAYSPROC)dlsym(library, "glDrawArrays");
   kglDrawBuffer = (KGLDRAWBUFFERPROC)dlsym(library, "glDrawBuffer");
   kglDrawElements = (KGLDRAWELEMENTSPROC)dlsym(library, "glDrawElements");
   kglDrawPixels = (KGLDRAWPIXELSPROC)dlsym(library, "glDrawPixels");
   kglEdgeFlag = (KGLEDGEFLAGPROC)dlsym(library, "glEdgeFlag");
   kglEdgeFlagPointer = (KGLEDGEFLAGPOINTERPROC)dlsym(library, "glEdgeFlagPointer");
   kglEdgeFlagv = (KGLEDGEFLAGVPROC)dlsym(library, "glEdgeFlagv");
   kglEnable = (KGLENABLEPROC)dlsym(library, "glEnable");
   kglEnableClientState = (KGLENABLECLIENTSTATEPROC)dlsym(library, "glEnableClientState");
   kglEnd = (KGLENDPROC)dlsym(library, "glEnd");
   kglEndList = (KGLENDLISTPROC)dlsym(library, "glEndList");
   kglEvalCoord1d = (KGLEVALCOORD1DPROC)dlsym(library, "glEvalCoord1d");
   kglEvalCoord1dv = (KGLEVALCOORD1DVPROC)dlsym(library, "glEvalCoord1dv");
   kglEvalCoord1f = (KGLEVALCOORD1FPROC)dlsym(library, "glEvalCoord1f");
   kglEvalCoord1fv = (KGLEVALCOORD1FVPROC)dlsym(library, "glEvalCoord1fv");
   kglEvalCoord2d = (KGLEVALCOORD2DPROC)dlsym(library, "glEvalCoord2d");
   kglEvalCoord2dv = (KGLEVALCOORD2DVPROC)dlsym(library, "glEvalCoord2dv");
   kglEvalCoord2f = (KGLEVALCOORD2FPROC)dlsym(library, "glEvalCoord2f");
   kglEvalCoord2fv = (KGLEVALCOORD2FVPROC)dlsym(library, "glEvalCoord2fv");
   kglEvalMesh1 = (KGLEVALMESH1PROC)dlsym(library, "glEvalMesh1");
   kglEvalMesh2 = (KGLEVALMESH2PROC)dlsym(library, "glEvalMesh2");
   kglEvalPoint1 = (KGLEVALPOINT1PROC)dlsym(library, "glEvalPoint1");
   kglEvalPoint2 = (KGLEVALPOINT2PROC)dlsym(library, "glEvalPoint2");
   kglFeedbackBuffer = (KGLFEEDBACKBUFFERPROC)dlsym(library, "glFeedbackBuffer");
   kglFinish = (KGLFINISHPROC)dlsym(library, "glFinish");
   kglFlush = (KGLFLUSHPROC)dlsym(library, "glFlush");
   kglFogf = (KGLFOGFPROC)dlsym(library, "glFogf");
   kglFogfv = (KGLFOGFVPROC)dlsym(library, "glFogfv");
   kglFogi = (KGLFOGIPROC)dlsym(library, "glFogi");
   kglFogiv = (KGLFOGIVPROC)dlsym(library, "glFogiv");
   kglFrontFace = (KGLFRONTFACEPROC)dlsym(library, "glFrontFace");
   kglFrustum = (KGLFRUSTUMPROC)dlsym(library, "glFrustum");
   kglGenLists = (KGLGENLISTSPROC)dlsym(library, "glGenLists");
   kglGenTextures = (KGLGENTEXTURESPROC)dlsym(library, "glGenTextures");
   kglGetBooleanv = (KGLGETBOOLEANVPROC)dlsym(library, "glGetBooleanv");
   kglGetClipPlane = (KGLGETCLIPPLANEPROC)dlsym(library, "glGetClipPlane");
   kglGetDoublev = (KGLGETDOUBLEVPROC)dlsym(library, "glGetDoublev");
   kglGetError = (KGLGETERRORPROC)dlsym(library, "glGetError");
   kglGetFloatv = (KGLGETFLOATVPROC)dlsym(library, "glGetFloatv");
   kglGetIntegerv = (KGLGETINTEGERVPROC)dlsym(library, "glGetIntegerv");
   kglGetLightfv = (KGLGETLIGHTFVPROC)dlsym(library, "glGetLightfv");
   kglGetLightiv = (KGLGETLIGHTIVPROC)dlsym(library, "glGetLightiv");
   kglGetMapdv = (KGLGETMAPDVPROC)dlsym(library, "glGetMapdv");
   kglGetMapfv = (KGLGETMAPFVPROC)dlsym(library, "glGetMapfv");
   kglGetMapiv = (KGLGETMAPIVPROC)dlsym(library, "glGetMapiv");
   kglGetMaterialfv = (KGLGETMATERIALFVPROC)dlsym(library, "glGetMaterialfv");
   kglGetMaterialiv = (KGLGETMATERIALIVPROC)dlsym(library, "glGetMaterialiv");
   kglGetPixelMapfv = (KGLGETPIXELMAPFVPROC)dlsym(library, "glGetPixelMapfv");
   kglGetPixelMapuiv = (KGLGETPIXELMAPUIVPROC)dlsym(library, "glGetPixelMapuiv");
   kglGetPixelMapusv = (KGLGETPIXELMAPUSVPROC)dlsym(library, "glGetPixelMapusv");
   kglGetPointerv = (KGLGETPOINTERVPROC)dlsym(library, "glGetPointerv");
   kglGetPolygonStipple = (KGLGETPOLYGONSTIPPLEPROC)dlsym(library, "glGetPolygonStipple");
   kglGetString = (KGLGETSTRINGPROC)dlsym(library, "glGetString");
   kglGetTexEnvfv = (KGLGETTEXENVFVPROC)dlsym(library, "glGetTexEnvfv");
   kglGetTexEnviv = (KGLGETTEXENVIVPROC)dlsym(library, "glGetTexEnviv");
   kglGetTexGendv = (KGLGETTEXGENDVPROC)dlsym(library, "glGetTexGendv");
   kglGetTexGenfv = (KGLGETTEXGENFVPROC)dlsym(library, "glGetTexGenfv");
   kglGetTexGeniv = (KGLGETTEXGENIVPROC)dlsym(library, "glGetTexGeniv");
   kglGetTexImage = (KGLGETTEXIMAGEPROC)dlsym(library, "glGetTexImage");
   kglGetTexLevelParameterfv = (KGLGETTEXLEVELPARAMETERFVPROC)dlsym(library, "glGetTexLevelParameterfv");
   kglGetTexLevelParameteriv = (KGLGETTEXLEVELPARAMETERIVPROC)dlsym(library, "glGetTexLevelParameteriv");
   kglGetTexParameterfv = (KGLGETTEXPARAMETERFVPROC)dlsym(library, "glGetTexParameterfv");
   kglGetTexParameteriv = (KGLGETTEXPARAMETERIVPROC)dlsym(library, "glGetTexParameteriv");
   kglHint = (KGLHINTPROC)dlsym(library, "glHint");
   kglIndexMask = (KGLINDEXMASKPROC)dlsym(library, "glIndexMask");
   kglIndexPointer = (KGLINDEXPOINTERPROC)dlsym(library, "glIndexPointer");
   kglIndexd = (KGLINDEXDPROC)dlsym(library, "glIndexd");
   kglIndexdv = (KGLINDEXDVPROC)dlsym(library, "glIndexdv");
   kglIndexf = (KGLINDEXFPROC)dlsym(library, "glIndexf");
   kglIndexfv = (KGLINDEXFVPROC)dlsym(library, "glIndexfv");
   kglIndexi = (KGLINDEXIPROC)dlsym(library, "glIndexi");
   kglIndexiv = (KGLINDEXIVPROC)dlsym(library, "glIndexiv");
   kglIndexs = (KGLINDEXSPROC)dlsym(library, "glIndexs");
   kglIndexsv = (KGLINDEXSVPROC)dlsym(library, "glIndexsv");
   kglIndexub = (KGLINDEXUBPROC)dlsym(library, "glIndexub");
   kglIndexubv = (KGLINDEXUBVPROC)dlsym(library, "glIndexubv");
   kglInitNames = (KGLINITNAMESPROC)dlsym(library, "glInitNames");
   kglInterleavedArrays = (KGLINTERLEAVEDARRAYSPROC)dlsym(library, "glInterleavedArrays");
   kglIsEnabled = (KGLISENABLEDPROC)dlsym(library, "glIsEnabled");
   kglIsList = (KGLISLISTPROC)dlsym(library, "glIsList");
   kglIsTexture = (KGLISTEXTUREPROC)dlsym(library, "glIsTexture");
   kglLightModelf = (KGLLIGHTMODELFPROC)dlsym(library, "glLightModelf");
   kglLightModelfv = (KGLLIGHTMODELFVPROC)dlsym(library, "glLightModelfv");
   kglLightModeli = (KGLLIGHTMODELIPROC)dlsym(library, "glLightModeli");
   kglLightModeliv = (KGLLIGHTMODELIVPROC)dlsym(library, "glLightModeliv");
   kglLightf = (KGLLIGHTFPROC)dlsym(library, "glLightf");
   kglLightfv = (KGLLIGHTFVPROC)dlsym(library, "glLightfv");
   kglLighti = (KGLLIGHTIPROC)dlsym(library, "glLighti");
   kglLightiv = (KGLLIGHTIVPROC)dlsym(library, "glLightiv");
   kglLineStipple = (KGLLINESTIPPLEPROC)dlsym(library, "glLineStipple");
   kglLineWidth = (KGLLINEWIDTHPROC)dlsym(library, "glLineWidth");
   kglListBase = (KGLLISTBASEPROC)dlsym(library, "glListBase");
   kglLoadIdentity = (KGLLOADIDENTITYPROC)dlsym(library, "glLoadIdentity");
   kglLoadMatrixd = (KGLLOADMATRIXDPROC)dlsym(library, "glLoadMatrixd");
   kglLoadMatrixf = (KGLLOADMATRIXFPROC)dlsym(library, "glLoadMatrixf");
   kglLoadName = (KGLLOADNAMEPROC)dlsym(library, "glLoadName");
   kglLogicOp = (KGLLOGICOPPROC)dlsym(library, "glLogicOp");
   kglMap1d = (KGLMAP1DPROC)dlsym(library, "glMap1d");
   kglMap1f = (KGLMAP1FPROC)dlsym(library, "glMap1f");
   kglMap2d = (KGLMAP2DPROC)dlsym(library, "glMap2d");
   kglMap2f = (KGLMAP2FPROC)dlsym(library, "glMap2f");
   kglMapGrid1d = (KGLMAPGRID1DPROC)dlsym(library, "glMapGrid1d");
   kglMapGrid1f = (KGLMAPGRID1FPROC)dlsym(library, "glMapGrid1f");
   kglMapGrid2d = (KGLMAPGRID2DPROC)dlsym(library, "glMapGrid2d");
   kglMapGrid2f = (KGLMAPGRID2FPROC)dlsym(library, "glMapGrid2f");
   kglMaterialf = (KGLMATERIALFPROC)dlsym(library, "glMaterialf");
   kglMaterialfv = (KGLMATERIALFVPROC)dlsym(library, "glMaterialfv");
   kglMateriali = (KGLMATERIALIPROC)dlsym(library, "glMateriali");
   kglMaterialiv = (KGLMATERIALIVPROC)dlsym(library, "glMaterialiv");
   kglMatrixMode = (KGLMATRIXMODEPROC)dlsym(library, "glMatrixMode");
   kglMultMatrixd = (KGLMULTMATRIXDPROC)dlsym(library, "glMultMatrixd");
   kglMultMatrixf = (KGLMULTMATRIXFPROC)dlsym(library, "glMultMatrixf");
   kglNewList = (KGLNEWLISTPROC)dlsym(library, "glNewList");
   kglNormal3b = (KGLNORMAL3BPROC)dlsym(library, "glNormal3b");
   kglNormal3bv = (KGLNORMAL3BVPROC)dlsym(library, "glNormal3bv");
   kglNormal3d = (KGLNORMAL3DPROC)dlsym(library, "glNormal3d");
   kglNormal3dv = (KGLNORMAL3DVPROC)dlsym(library, "glNormal3dv");
   kglNormal3f = (KGLNORMAL3FPROC)dlsym(library, "glNormal3f");
   kglNormal3fv = (KGLNORMAL3FVPROC)dlsym(library, "glNormal3fv");
   kglNormal3i = (KGLNORMAL3IPROC)dlsym(library, "glNormal3i");
   kglNormal3iv = (KGLNORMAL3IVPROC)dlsym(library, "glNormal3iv");
   kglNormal3s = (KGLNORMAL3SPROC)dlsym(library, "glNormal3s");
   kglNormal3sv = (KGLNORMAL3SVPROC)dlsym(library, "glNormal3sv");
   kglNormalPointer = (KGLNORMALPOINTERPROC)dlsym(library, "glNormalPointer");
   kglOrtho = (KGLORTHOPROC)dlsym(library, "glOrtho");
   kglPassThrough = (KGLPASSTHROUGHPROC)dlsym(library, "glPassThrough");
   kglPixelMapfv = (KGLPIXELMAPFVPROC)dlsym(library, "glPixelMapfv");
   kglPixelMapuiv = (KGLPIXELMAPUIVPROC)dlsym(library, "glPixelMapuiv");
   kglPixelMapusv = (KGLPIXELMAPUSVPROC)dlsym(library, "glPixelMapusv");
   kglPixelStoref = (KGLPIXELSTOREFPROC)dlsym(library, "glPixelStoref");
   kglPixelStorei = (KGLPIXELSTOREIPROC)dlsym(library, "glPixelStorei");
   kglPixelTransferf = (KGLPIXELTRANSFERFPROC)dlsym(library, "glPixelTransferf");
   kglPixelTransferi = (KGLPIXELTRANSFERIPROC)dlsym(library, "glPixelTransferi");
   kglPixelZoom = (KGLPIXELZOOMPROC)dlsym(library, "glPixelZoom");
   kglPointSize = (KGLPOINTSIZEPROC)dlsym(library, "glPointSize");
   kglPolygonMode = (KGLPOLYGONMODEPROC)dlsym(library, "glPolygonMode");
   kglPolygonOffset = (KGLPOLYGONOFFSETPROC)dlsym(library, "glPolygonOffset");
   kglPolygonStipple = (KGLPOLYGONSTIPPLEPROC)dlsym(library, "glPolygonStipple");
   kglPopAttrib = (KGLPOPATTRIBPROC)dlsym(library, "glPopAttrib");
   kglPopClientAttrib = (KGLPOPCLIENTATTRIBPROC)dlsym(library, "glPopClientAttrib");
   kglPopMatrix = (KGLPOPMATRIXPROC)dlsym(library, "glPopMatrix");
   kglPopName = (KGLPOPNAMEPROC)dlsym(library, "glPopName");
   kglPrioritizeTextures = (KGLPRIORITIZETEXTURESPROC)dlsym(library, "glPrioritizeTextures");
   kglPushAttrib = (KGLPUSHATTRIBPROC)dlsym(library, "glPushAttrib");
   kglPushClientAttrib = (KGLPUSHCLIENTATTRIBPROC)dlsym(library, "glPushClientAttrib");
   kglPushMatrix = (KGLPUSHMATRIXPROC)dlsym(library, "glPushMatrix");
   kglPushName = (KGLPUSHNAMEPROC)dlsym(library, "glPushName");
   kglRasterPos2d = (KGLRASTERPOS2DPROC)dlsym(library, "glRasterPos2d");
   kglRasterPos2dv = (KGLRASTERPOS2DVPROC)dlsym(library, "glRasterPos2dv");
   kglRasterPos2f = (KGLRASTERPOS2FPROC)dlsym(library, "glRasterPos2f");
   kglRasterPos2fv = (KGLRASTERPOS2FVPROC)dlsym(library, "glRasterPos2fv");
   kglRasterPos2i = (KGLRASTERPOS2IPROC)dlsym(library, "glRasterPos2i");
   kglRasterPos2iv = (KGLRASTERPOS2IVPROC)dlsym(library, "glRasterPos2iv");
   kglRasterPos2s = (KGLRASTERPOS2SPROC)dlsym(library, "glRasterPos2s");
   kglRasterPos2sv = (KGLRASTERPOS2SVPROC)dlsym(library, "glRasterPos2sv");
   kglRasterPos3d = (KGLRASTERPOS3DPROC)dlsym(library, "glRasterPos3d");
   kglRasterPos3dv = (KGLRASTERPOS3DVPROC)dlsym(library, "glRasterPos3dv");
   kglRasterPos3f = (KGLRASTERPOS3FPROC)dlsym(library, "glRasterPos3f");
   kglRasterPos3fv = (KGLRASTERPOS3FVPROC)dlsym(library, "glRasterPos3fv");
   kglRasterPos3i = (KGLRASTERPOS3IPROC)dlsym(library, "glRasterPos3i");
   kglRasterPos3iv = (KGLRASTERPOS3IVPROC)dlsym(library, "glRasterPos3iv");
   kglRasterPos3s = (KGLRASTERPOS3SPROC)dlsym(library, "glRasterPos3s");
   kglRasterPos3sv = (KGLRASTERPOS3SVPROC)dlsym(library, "glRasterPos3sv");
   kglRasterPos4d = (KGLRASTERPOS4DPROC)dlsym(library, "glRasterPos4d");
   kglRasterPos4dv = (KGLRASTERPOS4DVPROC)dlsym(library, "glRasterPos4dv");
   kglRasterPos4f = (KGLRASTERPOS4FPROC)dlsym(library, "glRasterPos4f");
   kglRasterPos4fv = (KGLRASTERPOS4FVPROC)dlsym(library, "glRasterPos4fv");
   kglRasterPos4i = (KGLRASTERPOS4IPROC)dlsym(library, "glRasterPos4i");
   kglRasterPos4iv = (KGLRASTERPOS4IVPROC)dlsym(library, "glRasterPos4iv");
   kglRasterPos4s = (KGLRASTERPOS4SPROC)dlsym(library, "glRasterPos4s");
   kglRasterPos4sv = (KGLRASTERPOS4SVPROC)dlsym(library, "glRasterPos4sv");
   kglReadBuffer = (KGLREADBUFFERPROC)dlsym(library, "glReadBuffer");
   kglReadPixels = (KGLREADPIXELSPROC)dlsym(library, "glReadPixels");
   kglRectd = (KGLRECTDPROC)dlsym(library, "glRectd");
   kglRectdv = (KGLRECTDVPROC)dlsym(library, "glRectdv");
   kglRectf = (KGLRECTFPROC)dlsym(library, "glRectf");
   kglRectfv = (KGLRECTFVPROC)dlsym(library, "glRectfv");
   kglRecti = (KGLRECTIPROC)dlsym(library, "glRecti");
   kglRectiv = (KGLRECTIVPROC)dlsym(library, "glRectiv");
   kglRects = (KGLRECTSPROC)dlsym(library, "glRects");
   kglRectsv = (KGLRECTSVPROC)dlsym(library, "glRectsv");
   kglRenderMode = (KGLRENDERMODEPROC)dlsym(library, "glRenderMode");
   kglRotated = (KGLROTATEDPROC)dlsym(library, "glRotated");
   kglRotatef = (KGLROTATEFPROC)dlsym(library, "glRotatef");
   kglScaled = (KGLSCALEDPROC)dlsym(library, "glScaled");
   kglScalef = (KGLSCALEFPROC)dlsym(library, "glScalef");
   kglScissor = (KGLSCISSORPROC)dlsym(library, "glScissor");
   kglSelectBuffer = (KGLSELECTBUFFERPROC)dlsym(library, "glSelectBuffer");
   kglShadeModel = (KGLSHADEMODELPROC)dlsym(library, "glShadeModel");
   kglStencilFunc = (KGLSTENCILFUNCPROC)dlsym(library, "glStencilFunc");
   kglStencilMask = (KGLSTENCILMASKPROC)dlsym(library, "glStencilMask");
   kglStencilOp = (KGLSTENCILOPPROC)dlsym(library, "glStencilOp");
   kglTexCoord1d = (KGLTEXCOORD1DPROC)dlsym(library, "glTexCoord1d");
   kglTexCoord1dv = (KGLTEXCOORD1DVPROC)dlsym(library, "glTexCoord1dv");
   kglTexCoord1f = (KGLTEXCOORD1FPROC)dlsym(library, "glTexCoord1f");
   kglTexCoord1fv = (KGLTEXCOORD1FVPROC)dlsym(library, "glTexCoord1fv");
   kglTexCoord1i = (KGLTEXCOORD1IPROC)dlsym(library, "glTexCoord1i");
   kglTexCoord1iv = (KGLTEXCOORD1IVPROC)dlsym(library, "glTexCoord1iv");
   kglTexCoord1s = (KGLTEXCOORD1SPROC)dlsym(library, "glTexCoord1s");
   kglTexCoord1sv = (KGLTEXCOORD1SVPROC)dlsym(library, "glTexCoord1sv");
   kglTexCoord2d = (KGLTEXCOORD2DPROC)dlsym(library, "glTexCoord2d");
   kglTexCoord2dv = (KGLTEXCOORD2DVPROC)dlsym(library, "glTexCoord2dv");
   kglTexCoord2f = (KGLTEXCOORD2FPROC)dlsym(library, "glTexCoord2f");
   kglTexCoord2fv = (KGLTEXCOORD2FVPROC)dlsym(library, "glTexCoord2fv");
   kglTexCoord2i = (KGLTEXCOORD2IPROC)dlsym(library, "glTexCoord2i");
   kglTexCoord2iv = (KGLTEXCOORD2IVPROC)dlsym(library, "glTexCoord2iv");
   kglTexCoord2s = (KGLTEXCOORD2SPROC)dlsym(library, "glTexCoord2s");
   kglTexCoord2sv = (KGLTEXCOORD2SVPROC)dlsym(library, "glTexCoord2sv");
   kglTexCoord3d = (KGLTEXCOORD3DPROC)dlsym(library, "glTexCoord3d");
   kglTexCoord3dv = (KGLTEXCOORD3DVPROC)dlsym(library, "glTexCoord3dv");
   kglTexCoord3f = (KGLTEXCOORD3FPROC)dlsym(library, "glTexCoord3f");
   kglTexCoord3fv = (KGLTEXCOORD3FVPROC)dlsym(library, "glTexCoord3fv");
   kglTexCoord3i = (KGLTEXCOORD3IPROC)dlsym(library, "glTexCoord3i");
   kglTexCoord3iv = (KGLTEXCOORD3IVPROC)dlsym(library, "glTexCoord3iv");
   kglTexCoord3s = (KGLTEXCOORD3SPROC)dlsym(library, "glTexCoord3s");
   kglTexCoord3sv = (KGLTEXCOORD3SVPROC)dlsym(library, "glTexCoord3sv");
   kglTexCoord4d = (KGLTEXCOORD4DPROC)dlsym(library, "glTexCoord4d");
   kglTexCoord4dv = (KGLTEXCOORD4DVPROC)dlsym(library, "glTexCoord4dv");
   kglTexCoord4f = (KGLTEXCOORD4FPROC)dlsym(library, "glTexCoord4f");
   kglTexCoord4fv = (KGLTEXCOORD4FVPROC)dlsym(library, "glTexCoord4fv");
   kglTexCoord4i = (KGLTEXCOORD4IPROC)dlsym(library, "glTexCoord4i");
   kglTexCoord4iv = (KGLTEXCOORD4IVPROC)dlsym(library, "glTexCoord4iv");
   kglTexCoord4s = (KGLTEXCOORD4SPROC)dlsym(library, "glTexCoord4s");
   kglTexCoord4sv = (KGLTEXCOORD4SVPROC)dlsym(library, "glTexCoord4sv");
   kglTexCoordPointer = (KGLTEXCOORDPOINTERPROC)dlsym(library, "glTexCoordPointer");
   kglTexEnvf = (KGLTEXENVFPROC)dlsym(library, "glTexEnvf");
   kglTexEnvfv = (KGLTEXENVFVPROC)dlsym(library, "glTexEnvfv");
   kglTexEnvi = (KGLTEXENVIPROC)dlsym(library, "glTexEnvi");
   kglTexEnviv = (KGLTEXENVIVPROC)dlsym(library, "glTexEnviv");
   kglTexGend = (KGLTEXGENDPROC)dlsym(library, "glTexGend");
   kglTexGendv = (KGLTEXGENDVPROC)dlsym(library, "glTexGendv");
   kglTexGenf = (KGLTEXGENFPROC)dlsym(library, "glTexGenf");
   kglTexGenfv = (KGLTEXGENFVPROC)dlsym(library, "glTexGenfv");
   kglTexGeni = (KGLTEXGENIPROC)dlsym(library, "glTexGeni");
   kglTexGeniv = (KGLTEXGENIVPROC)dlsym(library, "glTexGeniv");
   kglTexImage1D = (KGLTEXIMAGE1DPROC)dlsym(library, "glTexImage1D");
   kglTexImage2D = (KGLTEXIMAGE2DPROC)dlsym(library, "glTexImage2D");
   kglTexParameterf = (KGLTEXPARAMETERFPROC)dlsym(library, "glTexParameterf");
   kglTexParameterfv = (KGLTEXPARAMETERFVPROC)dlsym(library, "glTexParameterfv");
   kglTexParameteri = (KGLTEXPARAMETERIPROC)dlsym(library, "glTexParameteri");
   kglTexParameteriv = (KGLTEXPARAMETERIVPROC)dlsym(library, "glTexParameteriv");
   kglTexSubImage1D = (KGLTEXSUBIMAGE1DPROC)dlsym(library, "glTexSubImage1D");
   kglTexSubImage2D = (KGLTEXSUBIMAGE2DPROC)dlsym(library, "glTexSubImage2D");
   kglTranslated = (KGLTRANSLATEDPROC)dlsym(library, "glTranslated");
   kglTranslatef = (KGLTRANSLATEFPROC)dlsym(library, "glTranslatef");
   kglVertex2d = (KGLVERTEX2DPROC)dlsym(library, "glVertex2d");
   kglVertex2dv = (KGLVERTEX2DVPROC)dlsym(library, "glVertex2dv");
   kglVertex2f = (KGLVERTEX2FPROC)dlsym(library, "glVertex2f");
   kglVertex2fv = (KGLVERTEX2FVPROC)dlsym(library, "glVertex2fv");
   kglVertex2i = (KGLVERTEX2IPROC)dlsym(library, "glVertex2i");
   kglVertex2iv = (KGLVERTEX2IVPROC)dlsym(library, "glVertex2iv");
   kglVertex2s = (KGLVERTEX2SPROC)dlsym(library, "glVertex2s");
   kglVertex2sv = (KGLVERTEX2SVPROC)dlsym(library, "glVertex2sv");
   kglVertex3d = (KGLVERTEX3DPROC)dlsym(library, "glVertex3d");
   kglVertex3dv = (KGLVERTEX3DVPROC)dlsym(library, "glVertex3dv");
   kglVertex3f = (KGLVERTEX3FPROC)dlsym(library, "glVertex3f");
   kglVertex3fv = (KGLVERTEX3FVPROC)dlsym(library, "glVertex3fv");
   kglVertex3i = (KGLVERTEX3IPROC)dlsym(library, "glVertex3i");
   kglVertex3iv = (KGLVERTEX3IVPROC)dlsym(library, "glVertex3iv");
   kglVertex3s = (KGLVERTEX3SPROC)dlsym(library, "glVertex3s");
   kglVertex3sv = (KGLVERTEX3SVPROC)dlsym(library, "glVertex3sv");
   kglVertex4d = (KGLVERTEX4DPROC)dlsym(library, "glVertex4d");
   kglVertex4dv = (KGLVERTEX4DVPROC)dlsym(library, "glVertex4dv");
   kglVertex4f = (KGLVERTEX4FPROC)dlsym(library, "glVertex4f");
   kglVertex4fv = (KGLVERTEX4FVPROC)dlsym(library, "glVertex4fv");
   kglVertex4i = (KGLVERTEX4IPROC)dlsym(library, "glVertex4i");
   kglVertex4iv = (KGLVERTEX4IVPROC)dlsym(library, "glVertex4iv");
   kglVertex4s = (KGLVERTEX4SPROC)dlsym(library, "glVertex4s");
   kglVertex4sv = (KGLVERTEX4SVPROC)dlsym(library, "glVertex4sv");
   kglVertexPointer = (KGLVERTEXPOINTERPROC)dlsym(library, "glVertexPointer");
   kglViewport = (KGLVIEWPORTPROC)dlsym(library, "glViewport");

   kglXQueryExtension = (KGLXQUERYEXTENSION)dlsym(library, "glXQueryExtension");
   kglXQueryVersion = (KGLXQUERYVERSION)dlsym(library, "glXQueryVersion");
   kglXGetConfig = (KGLXGETCONFIG)dlsym(library, "glXGetConfig");
   kglXChooseVisual = (KGLXCHOOSEVISUAL)dlsym(library, "glXChooseVisual");
   kglXCreateContext = (KGLXCREATECONTEXT)dlsym(library, "glXCreateContext");
   kglXDestroyContext = (KGLXDESTROYCONTEXT)dlsym(library, "glXDestroyContext");
   kglXMakeCurrent = (KGLXMAKECURRENT)dlsym(library, "glXMakeCurrent");
   kglXSwapBuffers = (KGLXSWAPBUFFERS)dlsym(library, "glXSwapBuffers");
   kglXGetProcAddressARB = (KGLXGETPROCADDRESSARB)dlsym(library, "glXGetProcAddressARB");

   return (kglViewport &&
           kglGenTextures &&
           kglTexImage2D &&
           kglTexSubImage2D &&
           kglXChooseVisual &&
           kglXCreateContext &&
           kglXDestroyContext &&
           kglXMakeCurrent &&
           kglXSwapBuffers);
}

#endif

