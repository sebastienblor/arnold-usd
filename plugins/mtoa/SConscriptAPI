# vim: filetype=python

## load our own python modules
import system
import os
from build_tools import find_files_recursive
from distutils import sysconfig

# import build env
Import('maya_env')
local_env = maya_env.Clone()

# Automatically add all source and include files found in the source path
src_base_dir  = os.path.join(local_env['ROOT_DIR'], 'plugins', 'mtoa')
source_files = []
include_files = []
for subdir in ['attributes', 'common', 'extension', 'platform', 'utils', 'session', 'render', 'scene' ]:
   dir = os.path.join(src_base_dir, subdir)
   source_files  += [os.path.join(subdir, x) for x in find_files_recursive(dir, ['.c', '.cpp'])]
   include_files += [os.path.join(subdir, x) for x in find_files_recursive(dir, ['.h'])]

#Add files to be exported by the API from 'nodes' and 'translators' folder
source_files_add = [os.path.join('nodes', 'shader', 'ArnoldShaderNode.cpp'),
                    os.path.join('nodes', 'shader', 'ArnoldStandardNode.cpp'),
                    os.path.join('nodes', 'shader', 'ArnoldSkinNode.cpp'),
                    os.path.join('translators', 'camera', 'AutoCameraTranslator.cpp'),
                    os.path.join('translators', 'camera', 'CameraTranslator.cpp'),
                    os.path.join('translators', 'driver', 'DriverTranslator.cpp'),
                    os.path.join('translators', 'filter', 'FilterTranslator.cpp'),
                    os.path.join('translators', 'light', 'LightTranslator.cpp'),
                    os.path.join('translators', 'options', 'OptionsTranslator.cpp'),
                    os.path.join('translators', 'shader', 'ShaderTranslator.cpp'),
                    os.path.join('translators', 'shape', 'ShapeTranslator.cpp'),
                    os.path.join('translators', 'AutoDagTranslator.cpp'),
                    os.path.join('translators', 'NodeTranslator.cpp')]
include_files_add = [os.path.join('nodes', 'shader', 'ArnoldShaderNode.h'),
                        os.path.join('nodes', 'shader', 'ArnoldStandardNode.h'),
                        os.path.join('nodes', 'shader', 'ArnoldSkinNode.h'),
                        os.path.join('translators', 'camera', 'AutoCameraTranslator.h'),
                        os.path.join('translators', 'camera', 'CameraTranslator.h'),
                        os.path.join('translators', 'driver', 'DriverTranslator.h'),
                        os.path.join('translators', 'filter', 'FilterTranslator.h'),
                        os.path.join('translators', 'light', 'LightTranslator.h'),
                        os.path.join('translators', 'options', 'OptionsTranslator.h'),
                        os.path.join('translators', 'shader', 'ShaderTranslator.h'),
                        os.path.join('translators', 'shape', 'ShapeTranslator.h'),
                        os.path.join('translators', 'AutoDagTranslator.h'),
                        os.path.join('translators', 'NodeTranslator.h')]

source_files_rem =  [os.path.join('render', 'BatchProgressDriver.cpp')]

include_files_rem = []

for file_rem in source_files_rem:
    source_files.remove(file_rem)
for file_rem in include_files_rem:
    include_files.remove(file_rem)
  
source_files += source_files_add
include_files += include_files_add

local_env.Append(CPPPATH = [sysconfig.get_python_inc()])

MTOA_API = local_env.SharedLibrary('mtoa_api', source_files)

if system.os() == 'darwin':
    local_env.Append(CPPDEFINES = Split('DARWIN'))
    local_env.Append(FRAMEWORKS=Split('OpenGl AGL'))
    local_env.Append(CPPPATH = '/System/Library/Frameworks/OpenGL.framework/Headers')

Return('MTOA_API')
