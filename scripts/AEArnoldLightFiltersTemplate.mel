
global proc MoveLightFilterUp(string $node, string $list)
{
   string $attr = ($node + ".light_filters");
   int $items[] = `textScrollList -q -sii $list`;
   int $current = $items[0] - 1;
   
   if ($current > 0)
   {
      string $values = `getAttr $attr`;
      string $buffer[] = stringToStringArray($values, ":");
      
      string $temp = $buffer[$current - 1];
      $buffer[$current - 1] = $buffer[$current];
      $buffer[$current] = $temp;
   
      $values = stringArrayToString($buffer, ":");
      setAttr -type "string" $attr $values;
   
      LightFiltersGetList($node, $list);
   }
}

global proc MoveLightFilterDown(string $node, string $list)
{
   string $attr = ($node + ".light_filters");
   int $items[] = `textScrollList -q -sii $list`;
   int $current = $items[0];
   
   string $values = `getAttr $attr`;
   string $buffer[] = stringToStringArray($values, ":");
   
   if ($current < size($buffer))
   {
      string $temp = $buffer[$current];
      $buffer[$current] = $buffer[$current - 1];
      $buffer[$current - 1] = $temp;
      
      $values = stringArrayToString($buffer, ":");
      setAttr -type "string" $attr $values;

      LightFiltersGetList($node, $list);
   }
}

global proc LightFilterListChanged(string $list)
{
   string $items[] = `textScrollList -q -si $list`;
   
   int $selection = ($items[0] != "");
   
   button -edit -enable $selection lf_remove_button;
   button -edit -enable $selection lf_move_up_button;
   button -edit -enable $selection lf_move_down_button;
}

global proc AddLightFilterCB(string $lightNode, string $list)
{
   string $attr = ($lightNode + ".light_filters");
   string $filter[] = `textScrollList -q -si alf_filter_list`;
   string $filters  = `getAttr $attr`;
   string $new_filter = "";
   
   switch($filter[0])
   {
      case "Barndoor": $new_filter = `createNode -skipSelect ArnoldBarndoorShader`; break;
      case "Gobo": $new_filter = `createNode -skipSelect ArnoldGoboShader`; break;
      case "Light Blocker": $new_filter = `createNode -skipSelect ArnoldLightBlockerShader`; break;
      case "Light Decay": $new_filter = `createNode -skipSelect ArnoldLightDecayShader`; break;
   }
   
   if ($new_filter != "")
   {
      $filters += ":" + $new_filter;
   
      setAttr -type "string" $attr $filters;
   
      LightFiltersGetList($lightNode, $list);
   
      updateAE $new_filter;
   } 
}

global proc AddLightFilter(string $lightNode, string $list)
{
   string $win = "arnold_filter_list_win";
   if (`window -exists $win`)
      deleteUI $win; 

   window -title "Add Light Filter" -resizeToFitChildren true $win;

   string $addCmd = "AddLightFilterCB " + $lightNode + " " + $list;

   windowPref -ra;

   columnLayout -adjustableColumn true
                -columnOffset "both" 10
                -rowSpacing 10;
      textScrollList -nr 4 -ams false -dcc ($addCmd + "; window -edit -visible 0 " + $win) alf_filter_list;

      string $nodeType = `objectType $lightNode`;
      
      if ($nodeType == "spotLight")
      {
         textScrollList -edit -append "Barndoor" alf_filter_list;
         textScrollList -edit -append "Gobo" alf_filter_list;
      }
   
      textScrollList -edit -append "Light Blocker" alf_filter_list;
      textScrollList -edit -append "Light Decay" alf_filter_list;

      rowLayout -numberOfColumns 2 -columnAlign2 "center" "center";
         button -width 80 -label "Add" -command ($addCmd + "; deleteUI -window " + $win);
         button -width 80 -label "Cancel" -command ("deleteUI -window " + $win);
         setParent ..;
      setParent ..;      
   
   showWindow $win;
}

global proc RemoveLightFilter(string $lightNode, string $list)
{
   string $attr = ($lightNode + ".light_filters");
   string $filter[] = `textScrollList -q -si $list`;
   string $filters  = `getAttr $attr`;
   string $buffer[] = stringToStringArray($filters, ":");
   
   string $new_filters = stringArrayToString(stringArrayRemove($filter, $buffer), ":");
   
   setAttr -type "string" $attr $new_filters;
   
   delete $filter[0];
   
   LightFiltersGetList($lightNode, $list);
}

global proc LightFiltersGetList(string $node, string $list)
{
   string $values = `getAttr ($node + ".light_filters")`;
   string $buffer[] = stringToStringArray($values, ":");

   string $selection[] = `textScrollList -q -si $list`; 
     
   textScrollList -edit -removeAll $list;
   for ($J = 0; ($J < size($buffer)); $J++)
   {
      textScrollList -edit -append $buffer[$J] $list;

      if ($selection[0] == $buffer[$J])
         textScrollList -edit -si $selection[0] $list; 
   }

   LightFilterListChanged($list);
}

global proc ArnoldCustomLightFiltersChanged(string $attr, string $userChangeCB)
{
   string $buffer[];
   tokenize $attr "." $buffer;
   
   string $nodeName   = $buffer[0]; 
   string $attribName = $buffer[1];
   string $nodeType   = GetNodeType($nodeName); 

   if ($userChangeCB != "")
      evalDeferred($userChangeCB);
}

global proc ArnoldCustomLightFiltersNew(string $attr)
{
   string $buffer[];
   tokenize $attr "." $buffer;
   
   string $nodeName   = $buffer[0]; 
   string $attribName = $buffer[1];
   string $nodeType   = GetNodeType($nodeName);

   string $attribData[] = GetCustomAttributeData($attribName);   

   if (!attributeExists($attribName, $nodeName))
   {
      addAttr -ln $attribName -dt "string" $nodeName;
      setAttr -type "string" $attr $attribData[1];
   }

   string $uiName = $nodeType + "_" + $attribName; 
   string $updateCmd = "string $val[] = \`textScrollList -q -si " + $uiName + "\`; updateAE $val[0]";
   
   rowLayout -nc 3 -rat 1 "top" 0  -cw 1 30 -cw 2 330;
      text -label "";
      columnLayout -adj true -cat "both" 0 -rs 5;
         textScrollList -h 150 -ams false -sc ("LightFilterListChanged " + $uiName) -dcc $updateCmd $uiName;
         rowLayout -nc 2 -cw2 80 80 -columnAttach2 "both" "both" -columnAlign2 "center" "center" -co2 2 2;
            button -label "Add" -c ("AddLightFilter " + $nodeName + " " + $uiName) lf_add_button;
            button -label "Remove" -c ("RemoveLightFilter " + $nodeName + " " + $uiName) lf_remove_button;
            setParent ..;
         setParent ..;
      columnLayout -adj true -cat "both" 0 -rs 5;
         symbolButton -image arrowUp.xpm -c ("MoveLightFilterUp " + $nodeName + " " + $uiName) lf_move_up_button;
         symbolButton -image arrowDown.xpm -c ("MoveLightFilterDown " + $nodeName + " " + $uiName) lf_move_down_button;
         setParent ..;
      setParent ..;
   
   LightFiltersGetList($nodeName, $uiName);

   if ($attribData[6] != "")
      evalDeferred $attribData[6];
}

global proc ArnoldCustomLightFiltersReplace(string $attr)
{
   string $buffer[];
   tokenize $attr "." $buffer;
   
   string $nodeName   = $buffer[0]; 
   string $attribName = $buffer[1];
   string $nodeType   = GetNodeType($nodeName); 

   string $attribData[] = GetCustomAttributeData($attribName);   

   if (!attributeExists($attribName, $nodeName))
   {
      addAttr -ln $attribName -dt "string" $nodeName;
      setAttr -type "string" $attr $attribData[1];
   }

   string $uiName = $nodeType + "_" + $attribName; 
   string $updateCmd = "string $val[] = \`textScrollList -q -si " + $uiName + "\`; updateAE $val[0]";
   
   textScrollList -edit -dcc $updateCmd $uiName;
   symbolButton -edit -c ("MoveLightFilterUp " + $nodeName + " " + $uiName) lf_move_up_button;
   symbolButton -edit -c ("MoveLightFilterDown " + $nodeName + " " + $uiName) lf_move_down_button;
   button -edit -c ("AddLightFilter " + $nodeName + " " + $uiName) lf_add_button;
   button -edit -c ("RemoveLightFilter " + $nodeName + " " + $uiName) lf_remove_button;
   
   LightFiltersGetList($nodeName, $uiName);

   if ($attribData[6] != "")
      evalDeferred $attribData[6];
}
