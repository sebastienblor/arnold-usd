
proc string GetSourcePlug(string $plugname, int $index)
{
   string $conns[];
   if ($index < 0)
   {
      $conns = `listConnections -p 1 -s 1 -d 0 $plugname`;
   }
   else
   {
      $conns = `listConnections -p 1 -s 1 -d 0 ($plugname+"["+$index+"]")`;
   }

   if (size($conns) == 1)
   {
      return $conns[0];
   }
   else
   {
      return "";
   }
}

proc string GetNodeName(string $plugname)
{
   string $nodeAttrs[];
   tokenize $plugname "." $nodeAttrs;

   if (size($nodeAttrs) >= 1)
   {
      return $nodeAttrs[0];
   }
   else
   {
      return "";
   }
}

proc int GetConnectedCount(string $plugname)
{
   string $srcplug;
   int $i, $n = `getAttr -size $plugname`;
   int $c = 0;

   for ($i=0; $i<$n; $i++)
   {
      $srcplug = GetSourcePlug($plugname, $i);
      if ($srcplug != "")
      {
         $c++;
      }
   }

   return $c;
}

proc SwapConnections(string $plugname, int $i0, int $i1)
{
   string $dstPlug0 = $plugname + "[" + $i0 + "]";
   string $dstPlug1 = $plugname + "[" + $i1 + "]";
   string $srcPlug0 = GetSourcePlug($dstPlug0, -1);
   string $srcPlug1 = GetSourcePlug($dstPlug1, -1);

   if ($srcPlug0 != "")
   {
      disconnectAttr $srcPlug0 $dstPlug0;
   }
   if ($srcPlug1 != "")
   {
      disconnectAttr $srcPlug1 $dstPlug1;
   }
   if ($srcPlug0 != "")
   {
      connectAttr $srcPlug0 $dstPlug1;
   }
   if ($srcPlug1 != "")
   {
      connectAttr $srcPlug1 $dstPlug0;
   }
}

// ---

global proc MoveLightFilterUp(string $node, string $list)
{
   string $attr = ($node + ".light_filters");
   int $items[] = `textScrollList -q -sii $list`;
   if (size($items) == 0)
   {
      return;
   }
   int $current = $items[0] - 1;

   if ($current > 0)
   {
      SwapConnections($attr, $current-1, $current);
   
      LightFiltersGetList($node, $list);
   }
}

global proc MoveLightFilterDown(string $node, string $list)
{
   string $attr = ($node + ".light_filters");
   int $items[] = `textScrollList -q -sii $list`;
   if (size($items) == 0)
   {
      return;
   }
   int $current = $items[0];

   if ($current < GetConnectedCount($attr))
   {
      SwapConnections($attr, $current-1, $current);

      LightFiltersGetList($node, $list);
   }
}

global proc LightFilterListChanged(string $list)
{
   string $items[] = `textScrollList -q -si $list`;
   
   int $selection = (size($items) > 0 && $items[0] != "");
   
   button -edit -enable $selection lf_remove_button;
   button -edit -enable $selection lf_move_up_button;
   button -edit -enable $selection lf_move_down_button;
}

global proc AddLightFilterCB(string $lightNode, string $list)
{
   string $attr = ($lightNode + ".light_filters");
   string $filterTypes[] = `textScrollList -q -si alf_filter_list`;
   string $filterType = (size($filterTypes) > 0 ? $filterTypes[0] : "");
   string $new_filter = "";
   
   switch ($filterType)
   {
      case "Barndoor":
         $new_filter = `createNode -skipSelect ArnoldBarndoorShader`;
         break;
      case "Gobo":
         $new_filter = `createNode -skipSelect ArnoldGoboShader`;
         break;
      case "Light Blocker":
         $new_filter = `createNode -skipSelect ArnoldLightBlockerShader`;
         break;
      case "Light Decay":
         $new_filter = `createNode -skipSelect ArnoldLightDecayShader`;
         break;
   }
   
   if ($new_filter != "")
   {
      int $nfilters = GetConnectedCount($attr);

      connectAttr ($new_filter+".message") ($attr+"["+$nfilters+"]");

      LightFiltersGetList($lightNode, $list);

      updateAE $new_filter;
   } 
}

global proc AddLightFilter(string $lightNode, string $list)
{
   string $win = "arnold_filter_list_win";
   if (`window -exists $win`)
      deleteUI $win; 

   window -title "Add Light Filter" -resizeToFitChildren true $win;

   string $addCmd = "AddLightFilterCB " + $lightNode + " " + $list;

   windowPref -ra;

   columnLayout -adjustableColumn true
                -columnOffset "both" 10
                -rowSpacing 10;
      textScrollList -nr 4 -ams false -dcc ($addCmd + "; window -edit -visible 0 " + $win) alf_filter_list;

      string $nodeType = `objectType $lightNode`;
      
      if ($nodeType == "spotLight")
      {
         textScrollList -edit -append "Barndoor" alf_filter_list;
         textScrollList -edit -append "Gobo" alf_filter_list;
      }
   
      textScrollList -edit -append "Light Blocker" alf_filter_list;
      textScrollList -edit -append "Light Decay" alf_filter_list;

      rowLayout -numberOfColumns 2 -columnAlign2 "center" "center";
         button -width 80 -label "Add" -command ($addCmd + "; deleteUI -window " + $win);
         button -width 80 -label "Cancel" -command ("deleteUI -window " + $win);
         setParent ..;
      setParent ..;      
   
   showWindow $win;
}

global proc RemoveLightFilter(string $lightNode, string $list)
{
   string $attr = ($lightNode + ".light_filters");

   string $selection[] = `textScrollList -q -si $list`;
   string $selected = (size($selection) > 0 ? $selection[0] : "");

   int $nfilters = GetConnectedCount($attr);

   for ($J = 0; $J < $nfilters; $J++)
   {
      string $srcplug = GetSourcePlug($attr, $J);
      string $filter = GetNodeName($srcplug);

      if ($filter == $selected)
      {
         for ($K = $J+1; $K < $nfilters; $J++, $K++)
         {
            SwapConnections($attr, $J, $K);
         }
         disconnectAttr $srcplug ($attr + "[" + ($nfilters-1) + "]");
         delete $filter;
         break;
      }
   }

   LightFiltersGetList($lightNode, $list);
}

global proc LightFiltersGetList(string $node, string $list)
{
   int $nfilters = GetConnectedCount($node+".light_filters");

   string $selection[] = `textScrollList -q -si $list`;
   string $selected = (size($selection) > 0 ? $selection[0] : "");

   textScrollList -edit -removeAll $list;
   for ($J = 0; $J < $nfilters; $J++)
   {
      string $filter = GetNodeName(GetSourcePlug($node+".light_filters", $J));
      if ($filter == "")
      {
         continue;
      }
      textScrollList -edit -append $filter $list;
      if ($filter == $selected)
      {
         textScrollList -edit -si $selected $list;
      }
   }

   LightFilterListChanged($list);   
}

global proc ArnoldCustomLightFiltersChanged(string $attr, string $userChangeCB)
{
   string $buffer[];
   tokenize $attr "." $buffer;
   
   string $nodeName   = $buffer[0]; 
   string $attribName = $buffer[1];
   string $nodeType   = GetNodeType($nodeName); 

   if ($userChangeCB != "")
      evalDeferred($userChangeCB);
}

global proc ArnoldCustomLightFiltersNew(string $attr)
{
   string $buffer[];
   tokenize $attr "." $buffer;
   
   string $nodeName   = $buffer[0]; 
   string $attribName = $buffer[1];
   string $nodeType   = GetNodeType($nodeName);

   if (!attributeExists($attribName, $nodeName))
   {
      addAttr -ln $attribName -at "message" -multi $nodeName;
   }

   string $uiName = $nodeType + "_" + $attribName; 
   string $updateCmd = "string $val[] = \`textScrollList -q -si " + $uiName + "\`; updateAE $val[0]";
   
   rowLayout -nc 3 -rat 1 "top" 0  -cw 1 30 -cw 2 330;
      text -label "";
      columnLayout -adj true -cat "both" 0 -rs 5;
         textScrollList -h 150 -ams false -sc ("LightFilterListChanged " + $uiName) -dcc $updateCmd $uiName;
         rowLayout -nc 2 -cw2 80 80 -columnAttach2 "both" "both" -columnAlign2 "center" "center" -co2 2 2;
            button -label "Add" -c ("AddLightFilter " + $nodeName + " " + $uiName) lf_add_button;
            button -label "Remove" -c ("RemoveLightFilter " + $nodeName + " " + $uiName) lf_remove_button;
            setParent ..;
         setParent ..;
      columnLayout -adj true -cat "both" 0 -rs 5;
         symbolButton -image arrowUp.xpm -c ("MoveLightFilterUp " + $nodeName + " " + $uiName) lf_move_up_button;
         symbolButton -image arrowDown.xpm -c ("MoveLightFilterDown " + $nodeName + " " + $uiName) lf_move_down_button;
         setParent ..;
      setParent ..;
   
   LightFiltersGetList($nodeName, $uiName);
}

global proc ArnoldCustomLightFiltersReplace(string $attr)
{
   string $buffer[];
   tokenize $attr "." $buffer;
   
   string $nodeName   = $buffer[0]; 
   string $attribName = $buffer[1];
   string $nodeType   = GetNodeType($nodeName); 

   if (!attributeExists($attribName, $nodeName))
   {
      addAttr -ln $attribName -at "message" -multi $nodeName;
   }

   string $uiName = $nodeType + "_" + $attribName; 
   string $updateCmd = "string $val[] = \`textScrollList -q -si " + $uiName + "\`; updateAE $val[0]";
   
   textScrollList -edit -dcc $updateCmd $uiName;
   symbolButton -edit -c ("MoveLightFilterUp " + $nodeName + " " + $uiName) lf_move_up_button;
   symbolButton -edit -c ("MoveLightFilterDown " + $nodeName + " " + $uiName) lf_move_down_button;
   button -edit -c ("AddLightFilter " + $nodeName + " " + $uiName) lf_add_button;
   button -edit -c ("RemoveLightFilter " + $nodeName + " " + $uiName) lf_remove_button;
   
   LightFiltersGetList($nodeName, $uiName);
}
