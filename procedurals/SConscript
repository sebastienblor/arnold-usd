# vim: filetype=python

## load our own python modules
import system
from build_tools import find_files_recursive

import os, glob

# import build env
Import('env')
local_env = env.Clone(SHLIBPREFIX = '')

# Add new procedural directory names here
PROCEDURALS = ['ParticleInstancer', 'MayaFluidCreator'] 

source_files = []
include_files = []

MTOA_PROCS = []

# For every procedural found, get a list of source and include files
for dir in PROCEDURALS:
    base_dir = os.path.join(local_env['ROOT_DIR'], 'procedurals', dir)
    if os.path.isdir(base_dir) and dir != '.svn':
        proc_src_files = [os.path.join(dir, name) for name in find_files_recursive(base_dir, ['.c', '.cpp'])]
        proc_inc_files = [os.path.join(dir, name) for name in find_files_recursive(base_dir, ['.h'])]
        source_files  += proc_src_files
        include_files += proc_inc_files
        # Name of the final dll will be "mtoa_<directory>_proc"
        MTOA_PROCS    += local_env.SharedLibrary(os.path.join(dir, 'mtoa_%s_proc' % dir), proc_src_files)
 
local_env.Append(CPPPATH = ['.'])
local_env.Append(LIBS = Split('ai'))

if system.os() == 'darwin':
    local_env.Append(CCFLAGS = Split('-fvisibility=hidden')) # hide symbols by default
    #local_env.Append(LINKFLAGS = Split('-Wl,-rpath="\\$$ORIGIN" -z origin'))
elif system.os() != 'windows':
    local_env.Append(CCFLAGS = Split('-fvisibility=hidden')) # hide symbols by default
    local_env.Append(LINKFLAGS = Split('-Wl,-rpath="\\$$ORIGIN" -z origin'))

Return('MTOA_PROCS')
