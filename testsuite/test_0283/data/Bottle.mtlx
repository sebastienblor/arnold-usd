<?xml version="1.0"?>
<materialx version="1.36">
  <xi:include href="materialx/arnold/nodedefs.mtlx" />
  <look name="look1">
    <materialassign name="materialassign1" material="look1_ai_default_reflection_shader_material_shader" geom="aiStandInShape" />
    <materialassign name="materialassign2" material="look1_aiCarPaint1_material_shader" geom="/Bottle/Bottle_Shape" />
    <materialassign name="materialassign3" material="look1_aiFlat1_material_shader" geom="/Cap/Cap_Shape_Face" />
    <materialassign name="materialassign4" material="look1_aiFlat1_material_shader" geom="/Cap/Cap_Shape_SubD" />
  </look>
  <material name="look1_ai_default_reflection_shader_material_shader">
    <shaderref name="ai_default_reflection_shader" node="utility" />
  </material>
  <material name="look1_aiCarPaint1_material_shader">
    <shaderref name="aiCarPaint1" node="car_paint">
      <bindinput name="base_color" type="color3" nodegraph="NG_look1_aiCarPaint1_base_color" output="out" />
    </shaderref>
  </material>
  <nodegraph name="NG_look1_aiCarPaint1_base_color">
    <ramp_rgb name="ramp1" type="color3">
      <input name="type" type="string" value="v" />
      <input name="position" type="floatarray" value="0, 1" />
      <input name="color" type="floatarray" value="0, 1, 0, 0, 0, 1" />
      <input name="interpolation" type="integerarray" value="1, 1" />
      <input name="use_implicit_uvs" type="string" value="curves_only" />
    </ramp_rgb>
    <output name="out" type="color3" nodename="ramp1" />
  </nodegraph>
  <material name="look1_aiFlat1_material_shader">
    <shaderref name="aiFlat1" node="flat">
      <bindinput name="color" type="color3" nodegraph="NG_look1_aiFlat1_color" output="out" />
    </shaderref>
  </material>
  <nodegraph name="NG_look1_aiFlat1_color">
    <noise name="aiNoise1" type="color3">
      <input name="scale" type="vector3" value="10, 10, 10" />
      <input name="color1" type="color3" value="0, 0, 1" />
      <input name="color2" type="color3" value="0, 1, 0" />
    </noise>
    <output name="out" type="color3" nodename="aiNoise1" />
  </nodegraph>
  <look name="look2">
    <materialassign name="materialassign1" material="look2_ai_default_reflection_shader_material_shader" geom="BottleShape" />
    <materialassign name="materialassign2" material="look2_aiStandardSurface1_material_shader" geom="/Bottle/Bottle_Shape" />
    <materialassign name="materialassign3" material="look2_aiStandardSurface4_material_shader" geom="/Cap/Cap_Shape_Face" />
    <materialassign name="materialassign4" material="look2_aiStandardSurface4_material_shader" geom="/Cap/Cap_Shape_SubD" />
  </look>
  <material name="look2_ai_default_reflection_shader_material_shader">
    <shaderref name="ai_default_reflection_shader" node="utility" />
  </material>
  <material name="look2_aiStandardSurface1_material_shader">
    <shaderref name="aiStandardSurface1" node="standard_surface">
      <bindinput name="base" type="float" value="1" />
      <bindinput name="transmission" type="float" value="0.775229" />
      <bindinput name="transmission_color" type="color3" value="1, 0, 0" />
      <bindinput name="opacity" type="color3" value="0.15873, 0.15873, 0.15873" />
    </shaderref>
  </material>
  <material name="look2_aiStandardSurface4_material_shader">
    <shaderref name="aiStandardSurface4" node="standard_surface">
      <bindinput name="base_color" type="color3" nodegraph="NG_look2_aiStandardSurface4_base_color" output="out" />
    </shaderref>
  </material>
  <nodegraph name="NG_look2_aiStandardSurface4_base_color">
    <checkerboard name="checker1" type="color3">
      <input name="color1" type="color3" value="1, 0, 0" />
      <input name="color2" type="color3" value="0, 0, 1" />
    </checkerboard>
    <output name="out" type="color3" nodename="checker1" />
  </nodegraph>
</materialx>
