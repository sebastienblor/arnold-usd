/*
 * proc_soccer.c
 *
 * Procedural that creates a soccer ball with UV's (useful for debugging)
 */



#include <ai.h>
#include <string.h>


static int init(AtNode *mynode, void **user_ptr )
{
  AiMsgInfo( "[soccer] -- greetings!" );
  return 1;
}

static int cleanup( void *d )
{
  return 1;
}

static int numNodes( void *d )
{
  return 1;
}

static AtNode *getNode( void *d, int index )
{
  AtByte nsides[96] = {
    4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,
    4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,
    4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4 };

  AtUInt vidxs[384] = {
    0,55,4,1,1,4,5,2,2,5,6,3,3,6,78,73,55,50,7,4,4,7,8,5,5,8,9,6,6,9,83,78,50,45,10,
    7,7,10,11,8,8,11,12,9,9,12,88,83,45,13,14,10,10,14,35,11,11,35,31,12,12,31,93,88,
    77,82,18,72,72,18,19,15,15,19,20,16,16,20,59,17,82,87,21,18,18,21,22,19,19,22,23,
    20,20,23,54,59,87,92,24,21,21,24,25,22,22,25,26,23,23,26,49,54,92,97,27,24,24,27,
    28,25,25,28,29,26,26,29,30,49,93,31,32,94,94,32,33,95,95,33,34,96,96,34,27,97,31,
    35,36,32,32,36,37,33,33,37,38,34,34,38,28,27,35,14,39,36,36,39,40,37,37,40,41,38,
    38,41,29,28,14,13,42,39,39,42,43,40,40,43,44,41,41,44,30,29,13,45,46,42,42,46,47,
    43,43,47,48,44,44,48,49,30,45,50,51,46,46,51,52,47,47,52,53,48,48,53,54,49,50,55,
    56,51,51,56,57,52,52,57,58,53,53,58,59,54,55,0,60,56,56,60,61,57,57,61,62,58,58,
    62,17,59,0,1,63,60,60,63,64,61,61,64,65,62,62,65,16,17,1,2,66,63,63,66,67,64,64,
    67,68,65,65,68,15,16,2,3,69,66,66,69,70,67,67,70,71,68,68,71,72,15,3,73,74,69,69,
    74,75,70,70,75,76,71,71,76,77,72,73,78,79,74,74,79,80,75,75,80,81,76,76,81,82,77,
    78,83,84,79,79,84,85,80,80,85,86,81,81,86,87,82,83,88,89,84,84,89,90,85,85,90,91,
    86,86,91,92,87,88,93,94,89,89,94,95,90,90,95,96,91,91,96,97,92 };

  AtUInt uvidxs[384] = {
    3,2,1,0,0,1,5,4,4,5,7,6,6,7,9,8,2,11,10,1,1,10,12,5,5,12,13,7,7,13,14,9,11,16,15,
    10,10,15,17,12,12,17,18,13,13,18,19,14,16,21,20,15,15,20,22,17,17,22,23,18,18,23,
    24,19,28,27,26,25,25,26,30,29,29,30,32,31,31,32,34,33,27,36,35,26,26,35,37,30,30,
    37,38,32,32,38,39,34,36,41,40,35,35,40,42,37,37,42,43,38,38,43,44,39,41,46,45,40,
    40,45,47,42,42,47,48,43,43,48,49,44,53,52,51,50,50,51,55,54,54,55,57,56,56,57,59,
    58,52,61,60,51,51,60,62,55,55,62,63,57,57,63,64,59,61,66,65,60,60,65,67,62,62,67,
    68,63,63,68,69,64,66,71,70,65,65,70,72,67,67,72,73,68,68,73,74,69,76,16,75,70,70,
    75,77,72,72,77,78,73,73,78,44,79,16,11,80,75,75,80,81,77,77,81,82,78,78,82,39,44,
    11,2,83,80,80,83,84,81,81,84,85,82,82,85,34,39,2,87,86,83,83,86,88,84,84,88,89,85,
    85,89,90,34,93,92,91,86,86,91,94,88,88,94,95,89,89,95,97,96,92,99,98,91,91,98,100,
    94,94,100,101,95,95,101,102,97,99,104,103,98,98,103,105,100,100,105,106,101,101,
    106,107,102,104,109,108,103,103,108,110,105,105,110,111,106,106,111,112,107,116,
    115,114,113,113,114,118,117,117,118,120,119,119,120,122,121,115,124,123,114,114,
    123,125,118,118,125,126,120,120,126,127,122,124,129,128,123,123,128,130,125,125,
    130,131,126,126,131,132,127,129,133,50,128,128,50,54,130,130,54,56,131,131,56,134,
    132 };

  AtFloat vlist[294] = {
    -7.42658f,7.42658f,-7.42124f,-8.71607f,8.71606f,-4.43418f,-9.30679f,9.30679f,-8.06839e-09f,
    -8.71607f,8.71607f,4.43418f,-11.695f,4.59417f,-4.59417f,-12.3456f,5.08011f,-3.65947e-07f,
    -11.695f,4.59417f,4.59417f,-12.3456f,-3.1097e-07f,-5.08011f,-13.248f,3.91064e-08f,5.03536e-08f,
    -12.3456f,3.11752e-07f,5.08011f,-11.695f,-4.59417f,-4.59417f,-12.3456f,-5.08011f,1.77388e-07f,
    -11.695f,-4.59417f,4.59417f,-7.42658f,-7.42658f,-7.42124f,-8.71607f,-8.71607f,-4.43418f,9.30679f,
    9.30679f,7.49834e-08f,8.71607f,8.71607f,-4.43418f,7.42658f,7.42658f,-7.42124f,11.695f,4.59417f,
    4.59417f,12.3456f,5.08011f,2.68179e-07f,11.695f,4.59417f,-4.59417f,12.3456f,-3.15929e-07f,
    5.08011f,13.248f,3.91064e-08f,1.77623e-07f,12.3456f,3.16711e-07f,-5.08011f,11.695f,-4.59417f,
    4.59417f,12.3456f,-5.08011f,-4.09839e-07f,11.695f,-4.59417f,-4.59417f,8.71606f,-8.71607f,
    4.43418f,9.30679f,-9.30679f,-7.83126e-08f,8.71607f,-8.71607f,-4.43418f,7.42658f,-7.42124f,
    -7.42658f,-8.71607f,-8.71606f,4.43418f,-4.59417f,-11.695f,4.59417f,-2.84202e-07f,-12.3456f,
    5.08011f,4.59417f,-11.695f,4.59417f,-9.30679f,-9.30679f,6.38288e-09f,-5.08011f,-12.3456f,
    -2.24605e-07f,-6.15908e-08f,-13.248f,-8.01141e-08f,5.08011f,-12.3456f,3.42769e-07f,-4.59417f,
    -11.695f,-4.59417f,3.51046e-07f,-12.3456f,-5.08011f,4.59417f,-11.695f,-4.59417f,-4.43418f,
    -8.71607f,-8.71607f,-2.24156e-08f,-9.30679f,-9.30679f,4.43418f,-8.71607f,-8.71606f,-8.71607f,
    -4.43418f,-8.71607f,-4.59417f,-4.59417f,-11.695f,-1.18696e-07f,-5.08011f,-12.3456f,4.59417f,
    -4.59417f,-11.695f,8.71607f,-4.43418f,-8.71607f,-9.30679f,-6.72855e-09f,-9.30679f,-5.08011f,
    2.24605e-07f,-12.3456f,-1.31133e-07f,8.01141e-08f,-13.248f,5.08011f,-3.42769e-07f,-12.3456f,
    9.30679f,7.61842e-08f,-9.30679f,-8.71607f,4.43418f,-8.71607f,-4.59417f,4.59417f,-11.695f,
    3.93252e-07f,5.08011f,-12.3456f,4.59417f,4.59417f,-11.695f,8.71607f,4.43418f,-8.71607f,-4.43418f,
    8.71607f,-8.71607f,-2.15437e-08f,9.30679f,-9.30679f,4.43418f,8.71606f,-8.71607f,-4.59417f,
    11.695f,-4.59417f,-1.18696e-07f,12.3456f,-5.08011f,4.59417f,11.695f,-4.59417f,-5.08011f,12.3456f,
    2.24605e-07f,-1.31133e-07f,13.248f,8.01141e-08f,5.08011f,12.3456f,-3.42769e-07f,-4.59417f,
    11.695f,4.59417f,3.93252e-07f,12.3456f,5.08011f,4.59417f,11.695f,4.59417f,8.71607f,8.71607f,
    4.43418f,-7.42658f,7.42124f,7.42658f,-4.43418f,8.71607f,8.71607f,-2.16239e-08f,9.30679f,9.30679f,
    4.43418f,8.71607f,8.71606f,7.42658f,7.42124f,7.42658f,-8.71607f,4.43418f,8.71606f,-4.59417f,
    4.59417f,11.695f,-1.23885e-07f,5.08011f,12.3456f,4.59417f,4.59417f,11.695f,8.71607f,4.43418f,
    8.71607f,-9.30679f,6.14155e-09f,9.30679f,-5.08011f,-2.61623e-07f,12.3456f,-1.24788e-07f,
    -1.69171e-08f,13.248f,5.08011f,1.80985e-07f,12.3456f,9.30679f,-7.7114e-08f,9.30679f,-8.71607f,
    -4.43418f,8.71607f,-4.59417f,-4.59417f,11.695f,3.8953e-07f,-5.08011f,12.3456f,4.59417f,-4.59417f,
    11.695f,8.71607f,-4.43418f,8.71607f,-7.42658f,-7.42658f,7.42124f,-4.43418f,-8.71607f,8.71607f,
    -1.08852e-07f,-9.30679f,9.30679f,4.43418f,-8.71607f,8.71607f,7.42658f,-7.42658f,7.42124f };

  AtFloat uvlist[270] = {
    0.324908f,0.251881f,0.321217f,0.313458f,0.38348f,0.31346f,0.371862f,0.265719f,0.262155f,0.248095f,
    0.263873f,0.313208f,0.201128f,0.255909f,0.208338f,0.319399f,0.155228f,0.269449f,0.144067f,
    0.314953f,0.32769f,0.374653f,0.383837f,0.373742f,0.264403f,0.373408f,0.204392f,0.373896f,
    0.139151f,0.374274f,0.319126f,0.428569f,0.381931f,0.433609f,0.263156f,0.432376f,0.208321f,
    0.427884f,0.143757f,0.433805f,0.323064f,0.492332f,0.369523f,0.480216f,0.262014f,0.497233f,
    0.201336f,0.491722f,0.155266f,0.47955f,0.798314f,0.257755f,0.792622f,0.320956f,0.855769f,
    0.315409f,0.843868f,0.269829f,0.738897f,0.252397f,0.738837f,0.316618f,0.678386f,0.257111f,
    0.684192f,0.32045f,0.631739f,0.269257f,0.619815f,0.315344f,0.796928f,0.374652f,0.860617f,
    0.374653f,0.738776f,0.37465f,0.681125f,0.374647f,0.619085f,0.374651f,0.792623f,0.428349f,
    0.855767f,0.433896f,0.738839f,0.432683f,0.684198f,0.428845f,0.619849f,0.433925f,0.798315f,
    0.491551f,0.843796f,0.479548f,0.738896f,0.496908f,0.678386f,0.49218f,0.631675f,0.479947f,
    0.440674f,0.735582f,0.445286f,0.67004f,0.381008f,0.676136f,0.393589f,0.723298f,0.499516f,
    0.735353f,0.499515f,0.673567f,0.558356f,0.735582f,0.553745f,0.670039f,0.605442f,0.723297f,
    0.618023f,0.676134f,0.441022f,0.614952f,0.375968f,0.614847f,0.499515f,0.615007f,0.558005f,
    0.614952f,0.623056f,0.614845f,0.445131f,0.559918f,0.381222f,0.553756f,0.499512f,0.556636f,
    0.55387f,0.559925f,0.617805f,0.553762f,0.440396f,0.494724f,0.393605f,0.506964f,0.499483f,
    0.494465f,0.558994f,0.494986f,0.605415f,0.506858f,0.446203f,0.428915f,0.393131f,0.481205f,
    0.499998f,0.432881f,0.554141f,0.429262f,0.60712f,0.482038f,0.443203f,0.374293f,0.500129f,
    0.374406f,0.557829f,0.374652f,0.446561f,0.319327f,0.500038f,0.316298f,0.554178f,0.320001f,
    0.440963f,0.254667f,0.394765f,0.266965f,0.499782f,0.254995f,0.558805f,0.254377f,0.607004f,
    0.267164f,0.44546f,0.189966f,0.381936f,0.19579f,0.394246f,0.242508f,0.499498f,0.193084f,0.553712f,
    0.18999f,0.604908f,0.242434f,0.617048f,0.195784f,0.441479f,0.135355f,0.377277f,0.135278f,
    0.499515f,0.13541f,0.557542f,0.135343f,0.621757f,0.135278f,0.445828f,0.0815653f,0.382635f,
    0.0758714f,0.499516f,0.0772604f,0.553204f,0.0815653f,0.616397f,0.0758714f,0.440282f,0.0184271f,
    0.394609f,0.0302989f,0.499516f,0.0135808f,0.55875f,0.0184271f,0.604422f,0.0302989f,0.440239f,
    0.972502f,0.445817f,0.909294f,0.382565f,0.915037f,0.39457f,0.960525f,0.499518f,0.977353f,
    0.499517f,0.913627f,0.558796f,0.972501f,0.553217f,0.909293f,0.604464f,0.960523f,0.616469f,
    0.915034f,0.441432f,0.855429f,0.377199f,0.855609f,0.499516f,0.855288f,0.557601f,0.855428f,
    0.621834f,0.855606f,0.445399f,0.800592f,0.381667f,0.79491f,0.499516f,0.797284f,0.553633f,
    0.800592f,0.617365f,0.794908f,0.393868f,0.747749f,0.605163f,0.747747f };


  AtNode *n = AiNode( "polymesh" );
  AiNodeSetInt(n, "visibility", 255);
  AiNodeSetArray(n, "vlist",  AiArrayConvert(294,  1, AI_TYPE_FLOAT, vlist,  TRUE));
  AiNodeSetArray(n, "nsides", AiArrayConvert( 96,  1, AI_TYPE_BYTE,  nsides, TRUE));
  AiNodeSetArray(n, "vidxs",  AiArrayConvert(384,  1, AI_TYPE_UINT,  vidxs,  TRUE));
  AiNodeSetArray(n, "uvidxs", AiArrayConvert(384,  1, AI_TYPE_UINT,  uvidxs, TRUE));
  AiNodeSetArray(n, "uvlist", AiArrayConvert(270,  1, AI_TYPE_FLOAT, uvlist, TRUE));
  AiNodeSetStr(n, "name", "neiprop_soccer_lo_geomShape");
  return n;
};



// --------------------------------------------------------------------------------
// dso hook.
// --------------------------------------------------------------------------------
proc_loader
{
  vtable->Init     = init;
  vtable->Cleanup  = cleanup;
  vtable->NumNodes = numNodes;
  vtable->GetNode  = getNode;
  strcpy(vtable->version, AI_VERSION);
  return 1;
}

